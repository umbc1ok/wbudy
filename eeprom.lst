ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 1


   1              		.code	16
   2              		.file	"eeprom.c"
   3              		.section	.debug_abbrev,"",%progbits
   4              	.Ldebug_abbrev0:
   5              		.section	.debug_info,"",%progbits
   6              	.Ldebug_info0:
   7              		.section	.debug_line,"",%progbits
   8              	.Ldebug_line0:
   9 0000 EA000000 		.text
   9      02003600 
   9      00000201 
   9      FB0E0D00 
   9      01010101 
  10              	.Ltext0:
  11              		.align	2
  12              		.global	eepromStartRead
  13              		.code 16
  14              		.thumb_func
  15              		.type	eepromStartRead, %function
  16              	eepromStartRead:
  17              	.LFB3:
  18              		.file 1 "eeprom.c"
   1:eeprom.c      **** /******************************************************************************
   2:eeprom.c      ****  * Includes
   3:eeprom.c      ****  *****************************************************************************/
   4:eeprom.c      **** #include <general.h>
   5:eeprom.c      **** #include "i2c.h"
   6:eeprom.c      **** 
   7:eeprom.c      **** /******************************************************************************
   8:eeprom.c      ****  * Defines and typedefs
   9:eeprom.c      ****  *****************************************************************************/
  10:eeprom.c      **** 
  11:eeprom.c      **** #define EEPROM_SIZE       0x2000  //64kbit = 8KByte
  12:eeprom.c      **** #define LOCAL_EEPROM_ADDR 0x0
  13:eeprom.c      **** #define EEPROM_ADDR       0xA0
  14:eeprom.c      **** 
  15:eeprom.c      **** #define I2C_EEPROM_ADDR   (EEPROM_ADDR + (LOCAL_EEPROM_ADDR << 1))
  16:eeprom.c      **** #define I2C_EEPROM_RCV    (EEPROM_ADDR + (LOCAL_EEPROM_ADDR << 1) + 0x01)
  17:eeprom.c      **** #define I2C_EEPROM_SND    (EEPROM_ADDR + (LOCAL_EEPROM_ADDR << 1) + 0x00)
  18:eeprom.c      **** 
  19:eeprom.c      **** 
  20:eeprom.c      **** /******************************************************************************
  21:eeprom.c      ****  * Implementation of public functions
  22:eeprom.c      ****  *****************************************************************************/
  23:eeprom.c      **** 
  24:eeprom.c      **** /******************************************************************************
  25:eeprom.c      ****  *
  26:eeprom.c      ****  * Description:
  27:eeprom.c      ****  *    Waits till I2C returns ACK (after BURN cycle)
  28:eeprom.c      ****  *
  29:eeprom.c      ****  *    Note: After a stop condition, you may need a bus free time before you 
  30:eeprom.c      ****  *          can generate a new start condition.
  31:eeprom.c      ****  *
  32:eeprom.c      ****  * Returns:
  33:eeprom.c      ****  *    I2C_CODE_OK or I2C_CODE_ERROR
  34:eeprom.c      ****  *
  35:eeprom.c      ****  *****************************************************************************/
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 2


  36:eeprom.c      **** tS8 
  37:eeprom.c      **** eepromPoll(void)
  38:eeprom.c      **** {
  39:eeprom.c      ****   tS8 retCode  = I2C_CODE_OK;
  40:eeprom.c      ****   tU8 status   = 0;
  41:eeprom.c      ****   tBool burnEnd = FALSE;
  42:eeprom.c      **** 
  43:eeprom.c      ****   while(burnEnd == FALSE)
  44:eeprom.c      ****   {
  45:eeprom.c      ****     /* Generate Start condition */
  46:eeprom.c      ****     retCode = i2cStart();
  47:eeprom.c      **** 
  48:eeprom.c      ****     /* Transmit SLA+W */
  49:eeprom.c      ****     if(retCode == I2C_CODE_OK)
  50:eeprom.c      ****     {
  51:eeprom.c      ****       /* Write SLA+W */
  52:eeprom.c      ****       retCode = i2cPutChar(I2C_EEPROM_SND);
  53:eeprom.c      ****       while(retCode == I2C_CODE_BUSY)
  54:eeprom.c      ****       {
  55:eeprom.c      ****         retCode = i2cPutChar(I2C_EEPROM_SND);
  56:eeprom.c      ****       }
  57:eeprom.c      ****     }
  58:eeprom.c      **** 
  59:eeprom.c      ****     if(retCode == I2C_CODE_OK)
  60:eeprom.c      ****     {
  61:eeprom.c      ****       /* Wait until SLA+W transmitted */
  62:eeprom.c      ****       /* Get new status */
  63:eeprom.c      ****       status = i2cCheckStatus();
  64:eeprom.c      **** 
  65:eeprom.c      ****       if(status == 0x18)
  66:eeprom.c      ****       {
  67:eeprom.c      ****         /* data transmitted and ACK received */
  68:eeprom.c      ****         burnEnd = TRUE;
  69:eeprom.c      ****       }
  70:eeprom.c      ****       else if(status == 0x20)
  71:eeprom.c      ****       {
  72:eeprom.c      ****         /* data transmitted and ACK not received */
  73:eeprom.c      ****         // send start bit, start again
  74:eeprom.c      ****         burnEnd = FALSE;
  75:eeprom.c      ****       }
  76:eeprom.c      ****       else if( status != 0xf8 )
  77:eeprom.c      ****       {
  78:eeprom.c      ****         /* error ---*/
  79:eeprom.c      ****         retCode = I2C_CODE_ERROR;
  80:eeprom.c      ****         burnEnd = TRUE;
  81:eeprom.c      ****       }
  82:eeprom.c      ****     }
  83:eeprom.c      **** 
  84:eeprom.c      ****     /* Generate Stop condition */
  85:eeprom.c      ****     i2cStop();
  86:eeprom.c      **** 
  87:eeprom.c      ****   } // end of while 
  88:eeprom.c      **** 
  89:eeprom.c      **** 
  90:eeprom.c      ****   return retCode;
  91:eeprom.c      **** 
  92:eeprom.c      **** }
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 3


  93:eeprom.c      **** 
  94:eeprom.c      **** /******************************************************************************
  95:eeprom.c      ****  *
  96:eeprom.c      ****  * Description:
  97:eeprom.c      ****  *    Start a read
  98:eeprom.c      ****  *
  99:eeprom.c      ****  * Params:
 100:eeprom.c      ****  *    [in] devAddr - device address
 101:eeprom.c      ****  *    [in] address - eeprom address
 102:eeprom.c      ****  *
 103:eeprom.c      ****  * Returns:
 104:eeprom.c      ****  *    I2C_CODE_OK or I2C_CODE_ERROR
 105:eeprom.c      ****  *
 106:eeprom.c      ****  *****************************************************************************/
 107:eeprom.c      **** tS8 
 108:eeprom.c      **** eepromStartRead(tU8  devAddr, 
 109:eeprom.c      ****                 tU16 address)
 110:eeprom.c      **** {
  19              		.loc 1 110 0
  20 0000 30B5     		push	{r4, r5, lr}
  21              	.LCFI0:
  22              	.LVL0:
  23              		.loc 1 110 0
  24 0002 0006     		lsl	r0, r0, #24
  25              	.LVL1:
  26 0004 0904     		lsl	r1, r1, #16
  27              	.LVL2:
  28 0006 050E     		lsr	r5, r0, #24
  29              	.LVL3:
  30 0008 0C0C     		lsr	r4, r1, #16
  31              	.LVL4:
 111:eeprom.c      ****   tS8 retCode = 0;
 112:eeprom.c      ****   tU8 status  = 0;
 113:eeprom.c      **** 
 114:eeprom.c      ****   /* Generate Start condition */
 115:eeprom.c      ****   retCode = i2cStart();
  32              		.loc 1 115 0
  33 000a FFF7FEFF 		bl	i2cStart
 116:eeprom.c      **** 
 117:eeprom.c      ****   /* Transmit address */
 118:eeprom.c      ****   if(retCode == I2C_CODE_OK )
  34              		.loc 1 118 0
  35 000e 0006     		lsl	r0, r0, #24
  36 0010 0016     		asr	r0, r0, #24
  37 0012 0128     		cmp	r0, #1
  38 0014 1CD1     		bne	.L24
  39              	.L5:
 119:eeprom.c      ****   {
 120:eeprom.c      ****     /* Write SLA+W */
 121:eeprom.c      ****     retCode = i2cPutChar(devAddr);
 122:eeprom.c      ****     while( retCode == I2C_CODE_BUSY )
 123:eeprom.c      ****     {
 124:eeprom.c      ****       retCode = i2cPutChar( devAddr );
  40              		.loc 1 124 0
  41 0016 281C     		mov	r0, r5
  42 0018 FFF7FEFF 		bl	i2cPutChar
  43 001c 0006     		lsl	r0, r0, #24
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 4


  44 001e 000E     		lsr	r0, r0, #24
  45              	.LVL5:
  46              		.loc 1 122 0
  47 0020 0306     		lsl	r3, r0, #24
  48 0022 1816     		asr	r0, r3, #24
  49              	.LVL6:
  50 0024 031D     		add	r3, r0, #4
  51 0026 F6D0     		beq	.L5
 125:eeprom.c      ****     }
 126:eeprom.c      ****   }
 127:eeprom.c      **** 
 128:eeprom.c      ****   if( retCode == I2C_CODE_OK )
  52              		.loc 1 128 0
  53 0028 0128     		cmp	r0, #1
  54 002a 11D1     		bne	.L24
  55              	.LVL7:
  56              	.L23:
 129:eeprom.c      ****   {
 130:eeprom.c      **** #if 0
 131:eeprom.c      ****     /* Wait until data transmitted */
 132:eeprom.c      ****     while(1)
 133:eeprom.c      ****     {
 134:eeprom.c      ****       /* Get new status */
 135:eeprom.c      ****       status = i2cCheckStatus();
 136:eeprom.c      **** 
 137:eeprom.c      ****       if( (status == 0x18) || (status == 0x28) )
 138:eeprom.c      ****       {
 139:eeprom.c      ****         /* Data transmitted and ACK received */
 140:eeprom.c      **** 
 141:eeprom.c      **** 
 142:eeprom.c      ****         /* Write data */
 143:eeprom.c      ****         retCode = i2cPutChar( (tU8)(address >> 8) );
 144:eeprom.c      ****         while(retCode == I2C_CODE_BUSY)
 145:eeprom.c      ****         {
 146:eeprom.c      ****           retCode = i2cPutChar( (tU8)(address >> 8) );
 147:eeprom.c      ****         }
 148:eeprom.c      ****         break;
 149:eeprom.c      ****       }
 150:eeprom.c      ****       else if(status != 0xf8)
 151:eeprom.c      ****       {
 152:eeprom.c      ****         /* error */
 153:eeprom.c      ****         retCode = I2C_CODE_ERROR;
 154:eeprom.c      ****         break;
 155:eeprom.c      ****       }
 156:eeprom.c      ****     }
 157:eeprom.c      **** #endif
 158:eeprom.c      **** 
 159:eeprom.c      ****     if(retCode == I2C_CODE_OK)
 160:eeprom.c      ****     {
 161:eeprom.c      ****       /* Wait until data transmitted */
 162:eeprom.c      ****       while(1)
 163:eeprom.c      ****       {
 164:eeprom.c      ****         /* Get new status */
 165:eeprom.c      ****         status = i2cCheckStatus();
  57              		.loc 1 165 0
  58 002c FFF7FEFF 		bl	i2cCheckStatus
  59              	.LVL8:
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 5


 166:eeprom.c      **** 
 167:eeprom.c      ****         if( (status == 0x18) || (status == 0x28) )
  60              		.loc 1 167 0
  61 0030 1828     		cmp	r0, #24
  62 0032 01D0     		beq	.L8
  63              	.LVL9:
  64 0034 2828     		cmp	r0, #40
  65 0036 09D1     		bne	.L10
  66              	.L8:
 168:eeprom.c      ****         {
 169:eeprom.c      ****           /* Data transmitted and ACK received */
 170:eeprom.c      **** 
 171:eeprom.c      **** 
 172:eeprom.c      ****           /* Write data */
 173:eeprom.c      ****           retCode = i2cPutChar( (tU8)(address & 0xff) );
  67              		.loc 1 173 0
  68 0038 2306     		lsl	r3, r4, #24
  69 003a 1C0E     		lsr	r4, r3, #24
  70              	.LVL10:
  71              	.L12:
 174:eeprom.c      ****           while( retCode == I2C_CODE_BUSY )
 175:eeprom.c      ****           {
 176:eeprom.c      ****             retCode = i2cPutChar( (tU8)(address & 0xff) );
  72              		.loc 1 176 0
  73 003c 201C     		mov	r0, r4
  74              	.LVL11:
  75 003e FFF7FEFF 		bl	i2cPutChar
  76 0042 0006     		lsl	r0, r0, #24
  77 0044 000E     		lsr	r0, r0, #24
  78              	.LVL12:
  79              		.loc 1 174 0
  80 0046 FC28     		cmp	r0, #252
  81 0048 F8D0     		beq	.L12
  82 004a 01E0     		b	.L24
  83              	.LVL13:
  84              	.L10:
 177:eeprom.c      ****           }
 178:eeprom.c      **** 
 179:eeprom.c      ****           break;
 180:eeprom.c      ****         }
 181:eeprom.c      ****         else if( status != 0xf8 )
  85              		.loc 1 181 0
  86 004c F828     		cmp	r0, #248
  87 004e EDD0     		beq	.L23
  88              	.LVL14:
  89              	.L24:
 182:eeprom.c      ****         {
 183:eeprom.c      ****           /*  error */
 184:eeprom.c      ****           retCode = I2C_CODE_ERROR;
 185:eeprom.c      ****           break;
 186:eeprom.c      ****         }
 187:eeprom.c      ****       }
 188:eeprom.c      ****     }
 189:eeprom.c      ****   }
 190:eeprom.c      **** 
 191:eeprom.c      ****   /* Wait until data transmitted */
 192:eeprom.c      ****   while(1)
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 6


 193:eeprom.c      ****   {
 194:eeprom.c      ****     /* Get new status */
 195:eeprom.c      ****     status = i2cCheckStatus();
  90              		.loc 1 195 0
  91 0050 FFF7FEFF 		bl	i2cCheckStatus
  92              	.LVL15:
 196:eeprom.c      **** 
 197:eeprom.c      ****     if(status == 0x28)
  93              		.loc 1 197 0
  94 0054 2828     		cmp	r0, #40
  95 0056 01D0     		beq	.L13
 198:eeprom.c      ****     {
 199:eeprom.c      ****       /* Data transmitted and ACK received */
 200:eeprom.c      ****       break;
 201:eeprom.c      ****     }
 202:eeprom.c      ****     else if( status != 0xf8 )
  96              		.loc 1 202 0
  97 0058 F828     		cmp	r0, #248
  98 005a F9D0     		beq	.L24
  99              	.L13:
 203:eeprom.c      ****     {
 204:eeprom.c      ****       /* error */
 205:eeprom.c      ****       retCode = I2C_CODE_ERROR;
 206:eeprom.c      ****       break;
 207:eeprom.c      ****     }
 208:eeprom.c      ****   }
 209:eeprom.c      **** 
 210:eeprom.c      ****   /* Generate Start condition */
 211:eeprom.c      ****   retCode = i2cRepeatStart();
 100              		.loc 1 211 0
 101 005c FFF7FEFF 		bl	i2cRepeatStart
 102 0060 0006     		lsl	r0, r0, #24
 212:eeprom.c      **** 
 213:eeprom.c      ****   /* Transmit device address */
 214:eeprom.c      ****   if( retCode == I2C_CODE_OK)
 103              		.loc 1 214 0
 104 0062 040E     		lsr	r4, r0, #24
 105              	.LVL16:
 106 0064 0016     		asr	r0, r0, #24
 107 0066 0128     		cmp	r0, #1
 108 0068 09D1     		bne	.L25
 215:eeprom.c      ****   {
 216:eeprom.c      ****     /* Write SLA+R */
 217:eeprom.c      ****     retCode = i2cPutChar( devAddr + 0x01 );
 109              		.loc 1 217 0
 110 006a 6B1C     		add	r3, r5, #1
 111 006c 1B06     		lsl	r3, r3, #24
 112 006e 1D0E     		lsr	r5, r3, #24
 113              	.LVL17:
 114              	.L18:
 218:eeprom.c      ****     while( retCode == I2C_CODE_BUSY )
 219:eeprom.c      ****     {
 220:eeprom.c      ****       retCode = i2cPutChar( devAddr + 0x01 );
 115              		.loc 1 220 0
 116 0070 281C     		mov	r0, r5
 117 0072 FFF7FEFF 		bl	i2cPutChar
 118 0076 0006     		lsl	r0, r0, #24
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 7


 119 0078 040E     		lsr	r4, r0, #24
 120              		.loc 1 218 0
 121 007a FC2C     		cmp	r4, #252
 122 007c F8D0     		beq	.L18
 123              	.LVL18:
 124              	.L25:
 221:eeprom.c      ****     }
 222:eeprom.c      ****   }
 223:eeprom.c      **** 
 224:eeprom.c      ****   /* Wait until SLA+R transmitted */
 225:eeprom.c      ****   while(1)
 226:eeprom.c      ****   {
 227:eeprom.c      ****     /* Get new status */
 228:eeprom.c      ****     status = i2cCheckStatus();
 125              		.loc 1 228 0
 126 007e FFF7FEFF 		bl	i2cCheckStatus
 229:eeprom.c      **** 
 230:eeprom.c      ****     if(status == 0x40)
 127              		.loc 1 230 0
 128 0082 4028     		cmp	r0, #64
 129 0084 02D0     		beq	.L19
 231:eeprom.c      ****     {
 232:eeprom.c      ****       /* Data transmitted and ACK received */
 233:eeprom.c      ****       break;
 234:eeprom.c      ****     }
 235:eeprom.c      ****     else if(status != 0xf8)
 130              		.loc 1 235 0
 131 0086 F828     		cmp	r0, #248
 132 0088 F9D0     		beq	.L25
 133 008a FF24     		mov	r4, #255
 134              	.L19:
 135 008c 2006     		lsl	r0, r4, #24
 136 008e 0016     		asr	r0, r0, #24
 236:eeprom.c      ****     {
 237:eeprom.c      ****       /* error */
 238:eeprom.c      ****       retCode = I2C_CODE_ERROR;
 239:eeprom.c      ****       break;
 240:eeprom.c      ****     }
 241:eeprom.c      ****   }
 242:eeprom.c      **** 
 243:eeprom.c      ****   // Do not generate a stop bit
 244:eeprom.c      **** 
 245:eeprom.c      ****   return retCode;
 246:eeprom.c      **** }
 137              		.loc 1 246 0
 138              		@ sp needed for prologue
 139              	.LVL19:
 140              	.LVL20:
 141 0090 30BC     		pop	{r4, r5}
 142 0092 02BC     		pop	{r1}
 143 0094 0847     		bx	r1
 144              	.LFE3:
 145              		.size	eepromStartRead, .-eepromStartRead
 146 0096 C046     		.align	2
 147              		.global	pca9532
 148              		.code 16
 149              		.thumb_func
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 8


 150              		.type	pca9532, %function
 151              	pca9532:
 152              	.LFB6:
 247:eeprom.c      **** 
 248:eeprom.c      **** //-------------------------------------------------------------
 249:eeprom.c      **** // Random Read followed by sequential read
 250:eeprom.c      **** //-------------------------------------------------------------
 251:eeprom.c      **** // Receive buffer:
 252:eeprom.c      **** // Byte 00: DeviceAddress R/Wn=0 (WRITE)
 253:eeprom.c      **** ////////// Byte 01: EEPROM Address MSB   (A14..A08)
 254:eeprom.c      **** // Byte 02: EEPROM Address LSB   (A07..A00)
 255:eeprom.c      **** // Byte 03: DeviceAddress R/Wn=1 (READ)
 256:eeprom.c      **** // Byte 04 to 67: Buffer for data read from EEPROM
 257:eeprom.c      **** //-------------------------------------------------------------
 258:eeprom.c      **** //  Parameters:
 259:eeprom.c      **** //      pRxData     A pointer to the receive buffer
 260:eeprom.c      **** //      Length      The number of data bytes to receive
 261:eeprom.c      **** //
 262:eeprom.c      **** //  Returns:
 263:eeprom.c      **** //      MA_OK or I2C status code
 264:eeprom.c      **** //
 265:eeprom.c      **** //-------------------------------------------------------------
 266:eeprom.c      **** tS8 
 267:eeprom.c      **** eepromPageRead(tU16 address, 
 268:eeprom.c      ****                tU8* pBuf, 
 269:eeprom.c      ****                tU16 len) 
 270:eeprom.c      **** {
 271:eeprom.c      ****   tS8  retCode = 0;
 272:eeprom.c      ****   tU8  status  = 0;
 273:eeprom.c      ****   tU16 i       = 0;
 274:eeprom.c      **** 
 275:eeprom.c      ****   /* Write 4 bytes, see 24C256 Random Read */
 276:eeprom.c      ****   retCode = eepromStartRead(I2C_EEPROM_ADDR, address);
 277:eeprom.c      **** 
 278:eeprom.c      **** 
 279:eeprom.c      ****   if( retCode == I2C_CODE_OK )
 280:eeprom.c      ****   {
 281:eeprom.c      ****     /* wait until address transmitted and receive data */
 282:eeprom.c      ****     for(i = 1; i <= len; i++ )
 283:eeprom.c      ****     {
 284:eeprom.c      ****       /* wait until data transmitted */
 285:eeprom.c      ****       while(1)
 286:eeprom.c      ****       {
 287:eeprom.c      ****         /* Get new status */
 288:eeprom.c      ****         status = i2cCheckStatus();
 289:eeprom.c      **** 
 290:eeprom.c      ****         if(( status == 0x40 ) || ( status == 0x48 ) || ( status == 0x50 ))
 291:eeprom.c      ****         {
 292:eeprom.c      ****           /* Data received */
 293:eeprom.c      **** 
 294:eeprom.c      ****           if(i == len )
 295:eeprom.c      ****           {
 296:eeprom.c      ****             /* Set generate NACK */
 297:eeprom.c      ****             retCode = i2cGetChar( I2C_MODE_ACK1, pBuf );
 298:eeprom.c      ****           }
 299:eeprom.c      ****           else
 300:eeprom.c      ****           {
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 9


 301:eeprom.c      ****             retCode = i2cGetChar( I2C_MODE_ACK0, pBuf );
 302:eeprom.c      ****           }
 303:eeprom.c      **** 
 304:eeprom.c      ****           /* Read data */
 305:eeprom.c      ****           retCode = i2cGetChar( I2C_MODE_READ, pBuf );
 306:eeprom.c      ****           while( retCode == I2C_CODE_EMPTY )
 307:eeprom.c      ****           {
 308:eeprom.c      ****             retCode = i2cGetChar( I2C_MODE_READ, pBuf );
 309:eeprom.c      ****           }
 310:eeprom.c      ****           pBuf++;
 311:eeprom.c      **** 
 312:eeprom.c      ****           break;
 313:eeprom.c      ****         }
 314:eeprom.c      ****         else if( status != 0xf8 )
 315:eeprom.c      ****         {
 316:eeprom.c      ****           /* ERROR */
 317:eeprom.c      ****           i = len;
 318:eeprom.c      ****           retCode = I2C_CODE_ERROR;
 319:eeprom.c      ****           break;
 320:eeprom.c      ****         }
 321:eeprom.c      ****       }
 322:eeprom.c      ****     }
 323:eeprom.c      ****   }
 324:eeprom.c      **** 
 325:eeprom.c      ****   /* Generate Stop condition */
 326:eeprom.c      ****   i2cStop();
 327:eeprom.c      **** 
 328:eeprom.c      ****   return retCode;
 329:eeprom.c      **** 
 330:eeprom.c      **** }
 331:eeprom.c      **** 
 332:eeprom.c      **** 
 333:eeprom.c      **** tS8
 334:eeprom.c      **** eepromWrite(tU16 addr,
 335:eeprom.c      ****             tU8* pData,
 336:eeprom.c      ****             tU16 len)
 337:eeprom.c      **** {
 338:eeprom.c      ****   tS8 retCode = 0;
 339:eeprom.c      ****   tU8 status  = 0;
 340:eeprom.c      ****   tU8 i       = 0;
 341:eeprom.c      **** 
 342:eeprom.c      ****   do
 343:eeprom.c      ****   {
 344:eeprom.c      **** 
 345:eeprom.c      ****     /* generate Start condition */
 346:eeprom.c      ****     retCode = i2cStart();
 347:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 348:eeprom.c      ****       break;
 349:eeprom.c      **** 
 350:eeprom.c      **** 
 351:eeprom.c      ****     /* write EEPROM I2C address */
 352:eeprom.c      ****     retCode = i2cWriteWithWait(I2C_EEPROM_ADDR);
 353:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 354:eeprom.c      ****       break;
 355:eeprom.c      **** 
 356:eeprom.c      **** #if 0
 357:eeprom.c      ****     /* write offset high in EEPROM space  */
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 10


 358:eeprom.c      ****     retCode = i2cWriteWithWait( (tU8)(addr >> 8));
 359:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 360:eeprom.c      ****       break;
 361:eeprom.c      **** #endif
 362:eeprom.c      **** 
 363:eeprom.c      ****     /* write offset low in EEPROM space  */
 364:eeprom.c      ****     retCode = i2cWriteWithWait( (tU8)(addr & 0xFF));
 365:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 366:eeprom.c      ****       break;
 367:eeprom.c      **** 
 368:eeprom.c      **** 
 369:eeprom.c      ****     /* write data */
 370:eeprom.c      ****     for(i = 0; i <len; i++)
 371:eeprom.c      ****     {
 372:eeprom.c      ****       retCode = i2cWriteWithWait(*pData);
 373:eeprom.c      ****       if(retCode != I2C_CODE_OK)
 374:eeprom.c      ****         break;
 375:eeprom.c      **** 
 376:eeprom.c      ****       pData++;
 377:eeprom.c      ****     }
 378:eeprom.c      **** 
 379:eeprom.c      ****   } while(0);
 380:eeprom.c      **** 
 381:eeprom.c      ****   /* generate Stop condition */
 382:eeprom.c      ****   i2cStop();
 383:eeprom.c      **** 
 384:eeprom.c      **** 
 385:eeprom.c      ****   return retCode;
 386:eeprom.c      **** }
 387:eeprom.c      **** 
 388:eeprom.c      **** /******************************************************************************
 389:eeprom.c      ****  *
 390:eeprom.c      ****  * Description:
 391:eeprom.c      ****  *    Communicate with the PCA9532
 392:eeprom.c      ****  *    First pBuf/len = bytes to write
 393:eeprom.c      ****  *    Second pBuf2/len2 = bytes to read
 394:eeprom.c      ****  *
 395:eeprom.c      ****  *****************************************************************************/
 396:eeprom.c      **** tS8
 397:eeprom.c      **** pca9532(tU8* pBuf, tU16 len, tU8* pBuf2, tU16 len2) 
 398:eeprom.c      **** {
 153              		.loc 1 398 0
 154 0098 F0B5     		push	{r4, r5, r6, r7, lr}
 155              	.LCFI1:
 156              	.LVL21:
 157 009a 0904     		lsl	r1, r1, #16
 158              	.LVL22:
 159 009c 1B04     		lsl	r3, r3, #16
 160              	.LVL23:
 161 009e 82B0     		sub	sp, sp, #8
 162              	.LCFI2:
 163              		.loc 1 398 0
 164 00a0 090C     		lsr	r1, r1, #16
 165 00a2 1B0C     		lsr	r3, r3, #16
 166 00a4 061C     		mov	r6, r0
 167 00a6 171C     		mov	r7, r2
 168 00a8 0191     		str	r1, [sp, #4]
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 11


 169              	.LVL24:
 170 00aa 0093     		str	r3, [sp]
 171              	.LVL25:
 399:eeprom.c      ****   tS8  retCode = 0;
 400:eeprom.c      ****   tU8  status  = 0;
 401:eeprom.c      ****   tU16 i       = 0;
 402:eeprom.c      **** 
 403:eeprom.c      ****   do
 404:eeprom.c      ****   {
 405:eeprom.c      ****     /* generate Start condition */
 406:eeprom.c      ****     retCode = i2cStart();
 172              		.loc 1 406 0
 173 00ac FFF7FEFF 		bl	i2cStart
 174              	.LVL26:
 175 00b0 0006     		lsl	r0, r0, #24
 407:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 176              		.loc 1 407 0
 177 00b2 040E     		lsr	r4, r0, #24
 178              	.LVL27:
 179 00b4 0016     		asr	r0, r0, #24
 180 00b6 0128     		cmp	r0, #1
 181 00b8 19D1     		bne	.L31
 408:eeprom.c      ****       break;
 409:eeprom.c      **** 
 410:eeprom.c      **** 
 411:eeprom.c      ****     /* write pca9532 address */
 412:eeprom.c      ****     retCode = i2cWriteWithWait(0xc0);
 182              		.loc 1 412 0
 183 00ba C020     		mov	r0, #192
 184 00bc FFF7FEFF 		bl	i2cWriteWithWait
 185 00c0 0006     		lsl	r0, r0, #24
 413:eeprom.c      ****     if(retCode != I2C_CODE_OK)
 186              		.loc 1 413 0
 187 00c2 040E     		lsr	r4, r0, #24
 188 00c4 0016     		asr	r0, r0, #24
 189 00c6 0128     		cmp	r0, #1
 190 00c8 11D1     		bne	.L31
 414:eeprom.c      ****       break;
 191              		.loc 1 414 0
 192 00ca 0025     		mov	r5, #0
 193              	.LVL28:
 194 00cc 0CE0     		b	.L34
 195              	.L35:
 415:eeprom.c      **** 
 416:eeprom.c      ****     /* write data */
 417:eeprom.c      ****     for(i = 0; i <len; i++)
 418:eeprom.c      ****     {
 419:eeprom.c      ****       retCode = i2cWriteWithWait(*pBuf);
 196              		.loc 1 419 0
 197 00ce 3078     		ldrb	r0, [r6]
 198 00d0 FFF7FEFF 		bl	i2cWriteWithWait
 420:eeprom.c      ****       if(retCode != I2C_CODE_OK)
 199              		.loc 1 420 0
 200 00d4 0006     		lsl	r0, r0, #24
 201 00d6 0316     		asr	r3, r0, #24
 202 00d8 012B     		cmp	r3, #1
 203 00da 01D0     		beq	.L36
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 12


 204 00dc 040E     		lsr	r4, r0, #24
 205 00de 06E0     		b	.L31
 206              	.L36:
 207              		.loc 1 417 0
 208 00e0 6B1C     		add	r3, r5, #1
 209 00e2 1B04     		lsl	r3, r3, #16
 421:eeprom.c      ****         break;
 422:eeprom.c      **** 
 423:eeprom.c      ****       pBuf++;
 210              		.loc 1 423 0
 211 00e4 0136     		add	r6, r6, #1
 212              		.loc 1 417 0
 213 00e6 1D0C     		lsr	r5, r3, #16
 214              	.L34:
 215 00e8 019B     		ldr	r3, [sp, #4]
 216 00ea 9D42     		cmp	r5, r3
 217 00ec EFD1     		bne	.L35
 218              	.L31:
 424:eeprom.c      ****     }
 425:eeprom.c      **** 
 426:eeprom.c      ****   } while(0);
 427:eeprom.c      **** 
 428:eeprom.c      ****   if (len2 > 0)
 219              		.loc 1 428 0
 220 00ee 009B     		ldr	r3, [sp]
 221 00f0 002B     		cmp	r3, #0
 222 00f2 3DD0     		beq	.L38
 429:eeprom.c      ****   {
 430:eeprom.c      ****     /* Generate Start condition */
 431:eeprom.c      ****     retCode = i2cRepeatStart();
 223              		.loc 1 431 0
 224 00f4 FFF7FEFF 		bl	i2cRepeatStart
 225 00f8 0006     		lsl	r0, r0, #24
 432:eeprom.c      **** 
 433:eeprom.c      ****     /* Transmit device address */
 434:eeprom.c      ****     if( retCode == I2C_CODE_OK)
 226              		.loc 1 434 0
 227 00fa 040E     		lsr	r4, r0, #24
 228 00fc 0016     		asr	r0, r0, #24
 229 00fe 0128     		cmp	r0, #1
 230 0100 06D1     		bne	.L63
 231              	.L43:
 435:eeprom.c      ****     {
 436:eeprom.c      ****       /* Write SLA+R */
 437:eeprom.c      ****       retCode = i2cPutChar( 0xc0 + 0x01 );
 438:eeprom.c      ****       while( retCode == I2C_CODE_BUSY )
 439:eeprom.c      ****       {
 440:eeprom.c      ****         retCode = i2cPutChar( 0xc0 + 0x01 );
 232              		.loc 1 440 0
 233 0102 C120     		mov	r0, #193
 234 0104 FFF7FEFF 		bl	i2cPutChar
 235 0108 0006     		lsl	r0, r0, #24
 236 010a 040E     		lsr	r4, r0, #24
 237              		.loc 1 438 0
 238 010c FC2C     		cmp	r4, #252
 239 010e F8D0     		beq	.L43
 240              	.L63:
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 13


 441:eeprom.c      ****       }
 442:eeprom.c      ****     }
 443:eeprom.c      **** 
 444:eeprom.c      ****     /* Wait until SLA+R transmitted */
 445:eeprom.c      ****     while(1)
 446:eeprom.c      ****     {
 447:eeprom.c      ****       /* Get new status */
 448:eeprom.c      ****       status = i2cCheckStatus();
 241              		.loc 1 448 0
 242 0110 FFF7FEFF 		bl	i2cCheckStatus
 449:eeprom.c      **** 
 450:eeprom.c      ****       if(status == 0x40)
 243              		.loc 1 450 0
 244 0114 4028     		cmp	r0, #64
 245 0116 03D0     		beq	.L44
 451:eeprom.c      ****       {
 452:eeprom.c      ****         /* Data transmitted and ACK received */
 453:eeprom.c      ****         break;
 454:eeprom.c      ****       }
 455:eeprom.c      ****       else if(status != 0xf8)
 246              		.loc 1 455 0
 247 0118 F828     		cmp	r0, #248
 248 011a F9D0     		beq	.L63
 249 011c FF24     		mov	r4, #255
 250 011e 27E0     		b	.L38
 251              	.L44:
 456:eeprom.c      ****       {
 457:eeprom.c      ****         /* error */
 458:eeprom.c      ****         retCode = I2C_CODE_ERROR;
 459:eeprom.c      ****         break;
 460:eeprom.c      ****       }
 461:eeprom.c      ****     }
 462:eeprom.c      **** 
 463:eeprom.c      ****     if( retCode == I2C_CODE_OK )
 252              		.loc 1 463 0
 253 0120 012C     		cmp	r4, #1
 254 0122 25D1     		bne	.L38
 255 0124 0125     		mov	r5, #1
 256              	.LVL29:
 257              	.L69:
 464:eeprom.c      ****     {
 465:eeprom.c      ****       /* wait until address transmitted and receive data */
 466:eeprom.c      ****       for(i = 1; i <= len2; i++ )
 467:eeprom.c      ****       {
 468:eeprom.c      ****         /* wait until data transmitted */
 469:eeprom.c      ****         while(1)
 470:eeprom.c      ****         {
 471:eeprom.c      ****           /* Get new status */
 472:eeprom.c      ****           status = i2cCheckStatus();
 258              		.loc 1 472 0
 259 0126 FFF7FEFF 		bl	i2cCheckStatus
 260              	.LVL30:
 473:eeprom.c      **** 
 474:eeprom.c      ****           if(( status == 0x40 ) || ( status == 0x48 ) || ( status == 0x50 ))
 261              		.loc 1 474 0
 262 012a 4028     		cmp	r0, #64
 263 012c 03D0     		beq	.L49
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 14


 264              	.LVL31:
 265 012e 4828     		cmp	r0, #72
 266 0130 01D0     		beq	.L49
 267 0132 5028     		cmp	r0, #80
 268 0134 12D1     		bne	.L52
 269              	.L49:
 475:eeprom.c      ****           {
 476:eeprom.c      ****             /* Data received */
 477:eeprom.c      **** 
 478:eeprom.c      ****             if(i == len2 )
 270              		.loc 1 478 0
 271 0136 009B     		ldr	r3, [sp]
 272 0138 9D42     		cmp	r5, r3
 273 013a 01D1     		bne	.L53
 479:eeprom.c      ****             {
 480:eeprom.c      ****               /* Set generate NACK */
 481:eeprom.c      ****               retCode = i2cGetChar( I2C_MODE_ACK1, pBuf2 );
 274              		.loc 1 481 0
 275 013c 0120     		mov	r0, #1
 276              	.LVL32:
 277 013e 00E0     		b	.L68
 278              	.LVL33:
 279              	.L53:
 482:eeprom.c      ****             }
 483:eeprom.c      ****             else
 484:eeprom.c      ****             {
 485:eeprom.c      ****               retCode = i2cGetChar( I2C_MODE_ACK0, pBuf2 );
 280              		.loc 1 485 0
 281 0140 0020     		mov	r0, #0
 282              	.LVL34:
 283              	.L68:
 284 0142 391C     		mov	r1, r7
 285 0144 FFF7FEFF 		bl	i2cGetChar
 286              	.L57:
 486:eeprom.c      ****             }
 487:eeprom.c      **** 
 488:eeprom.c      ****             /* Read data */
 489:eeprom.c      ****             retCode = i2cGetChar( I2C_MODE_READ, pBuf2 );
 490:eeprom.c      ****             while( retCode == I2C_CODE_EMPTY )
 491:eeprom.c      ****             {
 492:eeprom.c      ****               retCode = i2cGetChar( I2C_MODE_READ, pBuf2 );
 287              		.loc 1 492 0
 288 0148 0220     		mov	r0, #2
 289 014a 391C     		mov	r1, r7
 290 014c FFF7FEFF 		bl	i2cGetChar
 291 0150 0006     		lsl	r0, r0, #24
 292 0152 040E     		lsr	r4, r0, #24
 293              		.loc 1 490 0
 294 0154 FD2C     		cmp	r4, #253
 295 0156 F7D0     		beq	.L57
 493:eeprom.c      ****             }
 494:eeprom.c      ****             pBuf2++;
 296              		.loc 1 494 0
 297 0158 0137     		add	r7, r7, #1
 298 015a 03E0     		b	.L59
 299              	.LVL35:
 300              	.L52:
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 15


 495:eeprom.c      **** 
 496:eeprom.c      ****             break;
 497:eeprom.c      ****           }
 498:eeprom.c      ****           else if( status != 0xf8 )
 301              		.loc 1 498 0
 302 015c F828     		cmp	r0, #248
 303 015e E2D0     		beq	.L69
 304 0160 009D     		ldr	r5, [sp]
 305 0162 FF24     		mov	r4, #255
 306              	.L59:
 307              		.loc 1 466 0
 308 0164 6B1C     		add	r3, r5, #1
 309 0166 1B04     		lsl	r3, r3, #16
 310 0168 1D0C     		lsr	r5, r3, #16
 311 016a 009B     		ldr	r3, [sp]
 312 016c 9D42     		cmp	r5, r3
 313 016e DAD9     		bls	.L69
 314              	.L38:
 499:eeprom.c      ****           {
 500:eeprom.c      ****             /* ERROR */
 501:eeprom.c      ****             i = len2;
 502:eeprom.c      ****             retCode = I2C_CODE_ERROR;
 503:eeprom.c      ****             break;
 504:eeprom.c      ****           }
 505:eeprom.c      ****         }
 506:eeprom.c      ****       }
 507:eeprom.c      ****     }
 508:eeprom.c      ****   }
 509:eeprom.c      **** 
 510:eeprom.c      ****   /* Generate Stop condition */
 511:eeprom.c      ****   i2cStop();
 315              		.loc 1 511 0
 316 0170 FFF7FEFF 		bl	i2cStop
 317              	.LVL36:
 318 0174 2006     		lsl	r0, r4, #24
 319 0176 0016     		asr	r0, r0, #24
 512:eeprom.c      **** 
 513:eeprom.c      ****   return retCode;
 514:eeprom.c      **** 
 515:eeprom.c      **** }...
 320              		.loc 1 515 0
 321 0178 02B0     		add	sp, sp, #8
 322              		@ sp needed for prologue
 323              	.LVL37:
 324              	.LVL38:
 325              	.LVL39:
 326              	.LVL40:
 327 017a F0BC     		pop	{r4, r5, r6, r7}
 328 017c 02BC     		pop	{r1}
 329 017e 0847     		bx	r1
 330              	.LFE6:
 331              		.size	pca9532, .-pca9532
 332              		.align	2
 333              		.global	eepromWrite
 334              		.code 16
 335              		.thumb_func
 336              		.type	eepromWrite, %function
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 16


 337              	eepromWrite:
 338              	.LFB5:
 339              		.loc 1 337 0
 340 0180 F0B5     		push	{r4, r5, r6, r7, lr}
 341              	.LCFI3:
 342              	.LVL41:
 343              		.loc 1 337 0
 344 0182 0004     		lsl	r0, r0, #16
 345              	.LVL42:
 346 0184 1204     		lsl	r2, r2, #16
 347              	.LVL43:
 348 0186 0F1C     		mov	r7, r1
 349 0188 050C     		lsr	r5, r0, #16
 350              	.LVL44:
 351 018a 160C     		lsr	r6, r2, #16
 352              	.LVL45:
 353              		.loc 1 346 0
 354 018c FFF7FEFF 		bl	i2cStart
 355              	.LVL46:
 356 0190 0006     		lsl	r0, r0, #24
 357              		.loc 1 347 0
 358 0192 040E     		lsr	r4, r0, #24
 359              	.LVL47:
 360 0194 0016     		asr	r0, r0, #24
 361 0196 0128     		cmp	r0, #1
 362 0198 20D1     		bne	.L71
 363              		.loc 1 352 0
 364 019a A020     		mov	r0, #160
 365 019c FFF7FEFF 		bl	i2cWriteWithWait
 366 01a0 0006     		lsl	r0, r0, #24
 367              		.loc 1 353 0
 368 01a2 040E     		lsr	r4, r0, #24
 369 01a4 0016     		asr	r0, r0, #24
 370 01a6 0128     		cmp	r0, #1
 371 01a8 18D1     		bne	.L71
 372              		.loc 1 364 0
 373 01aa 2806     		lsl	r0, r5, #24
 374 01ac 000E     		lsr	r0, r0, #24
 375 01ae FFF7FEFF 		bl	i2cWriteWithWait
 376 01b2 0006     		lsl	r0, r0, #24
 377              		.loc 1 365 0
 378 01b4 040E     		lsr	r4, r0, #24
 379 01b6 0016     		asr	r0, r0, #24
 380 01b8 0128     		cmp	r0, #1
 381 01ba 0FD1     		bne	.L71
 382              		.loc 1 366 0
 383 01bc 0025     		mov	r5, #0
 384              	.LVL48:
 385 01be 09E0     		b	.L75
 386              	.L76:
 387              		.loc 1 372 0
 388 01c0 E85D     		ldrb	r0, [r5, r7]
 389 01c2 FFF7FEFF 		bl	i2cWriteWithWait
 390              		.loc 1 373 0
 391 01c6 0006     		lsl	r0, r0, #24
 392 01c8 0316     		asr	r3, r0, #24
 393              		.loc 1 372 0
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 17


 394 01ca 0135     		add	r5, r5, #1
 395              		.loc 1 373 0
 396 01cc 012B     		cmp	r3, #1
 397 01ce 01D0     		beq	.L75
 398 01d0 040E     		lsr	r4, r0, #24
 399 01d2 03E0     		b	.L71
 400              	.L75:
 401              		.loc 1 370 0
 402 01d4 2B06     		lsl	r3, r5, #24
 403 01d6 1B0E     		lsr	r3, r3, #24
 404 01d8 B342     		cmp	r3, r6
 405 01da F1D3     		bcc	.L76
 406              	.LVL49:
 407              	.L71:
 408              		.loc 1 382 0
 409 01dc FFF7FEFF 		bl	i2cStop
 410 01e0 2006     		lsl	r0, r4, #24
 411 01e2 0016     		asr	r0, r0, #24
 412              		.loc 1 386 0
 413              		@ sp needed for prologue
 414              	.LVL50:
 415              	.LVL51:
 416              	.LVL52:
 417              	.LVL53:
 418 01e4 F0BC     		pop	{r4, r5, r6, r7}
 419 01e6 02BC     		pop	{r1}
 420 01e8 0847     		bx	r1
 421              	.LFE5:
 422              		.size	eepromWrite, .-eepromWrite
 423 01ea C046     		.align	2
 424              		.global	eepromPageRead
 425              		.code 16
 426              		.thumb_func
 427              		.type	eepromPageRead, %function
 428              	eepromPageRead:
 429              	.LFB4:
 430              		.loc 1 270 0
 431 01ec F0B5     		push	{r4, r5, r6, r7, lr}
 432              	.LCFI4:
 433              	.LVL54:
 434              		.loc 1 270 0
 435 01ee 0304     		lsl	r3, r0, #16
 436 01f0 1B0C     		lsr	r3, r3, #16
 437              	.LVL55:
 438 01f2 1204     		lsl	r2, r2, #16
 439              	.LVL56:
 440 01f4 0D1C     		mov	r5, r1
 441              		.loc 1 276 0
 442 01f6 A020     		mov	r0, #160
 443 01f8 191C     		mov	r1, r3
 444              	.LVL57:
 445              		.loc 1 270 0
 446 01fa 160C     		lsr	r6, r2, #16
 447              	.LVL58:
 448              		.loc 1 276 0
 449 01fc FFF7FEFF 		bl	eepromStartRead
 450              	.LVL59:
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 18


 451 0200 0006     		lsl	r0, r0, #24
 452              		.loc 1 279 0
 453 0202 040E     		lsr	r4, r0, #24
 454              	.LVL60:
 455 0204 0016     		asr	r0, r0, #24
 456 0206 0128     		cmp	r0, #1
 457 0208 24D1     		bne	.L82
 458 020a 0127     		mov	r7, #1
 459              	.LVL61:
 460 020c 20E0     		b	.L84
 461              	.LVL62:
 462              	.L99:
 463              		.loc 1 288 0
 464 020e FFF7FEFF 		bl	i2cCheckStatus
 465              	.LVL63:
 466              		.loc 1 290 0
 467 0212 4028     		cmp	r0, #64
 468 0214 03D0     		beq	.L86
 469              	.LVL64:
 470 0216 4828     		cmp	r0, #72
 471 0218 01D0     		beq	.L86
 472 021a 5028     		cmp	r0, #80
 473 021c 11D1     		bne	.L89
 474              	.L86:
 475              		.loc 1 294 0
 476 021e B742     		cmp	r7, r6
 477 0220 01D1     		bne	.L90
 478              		.loc 1 297 0
 479 0222 0120     		mov	r0, #1
 480              	.LVL65:
 481 0224 00E0     		b	.L102
 482              	.LVL66:
 483              	.L90:
 484              		.loc 1 301 0
 485 0226 0020     		mov	r0, #0
 486              	.LVL67:
 487              	.L102:
 488 0228 291C     		mov	r1, r5
 489 022a FFF7FEFF 		bl	i2cGetChar
 490              	.L94:
 491              		.loc 1 308 0
 492 022e 0220     		mov	r0, #2
 493 0230 291C     		mov	r1, r5
 494 0232 FFF7FEFF 		bl	i2cGetChar
 495 0236 0006     		lsl	r0, r0, #24
 496 0238 040E     		lsr	r4, r0, #24
 497              		.loc 1 306 0
 498 023a FD2C     		cmp	r4, #253
 499 023c F7D0     		beq	.L94
 500              		.loc 1 310 0
 501 023e 0135     		add	r5, r5, #1
 502 0240 03E0     		b	.L96
 503              	.LVL68:
 504              	.L89:
 505              		.loc 1 314 0
 506 0242 F828     		cmp	r0, #248
 507 0244 E3D0     		beq	.L99
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 19


 508 0246 371C     		mov	r7, r6
 509 0248 FF24     		mov	r4, #255
 510              	.L96:
 511              		.loc 1 282 0
 512 024a 7B1C     		add	r3, r7, #1
 513 024c 1B04     		lsl	r3, r3, #16
 514 024e 1F0C     		lsr	r7, r3, #16
 515              	.L84:
 516 0250 B742     		cmp	r7, r6
 517 0252 DCD9     		bls	.L99
 518              	.L82:
 519              		.loc 1 326 0
 520 0254 FFF7FEFF 		bl	i2cStop
 521              	.LVL69:
 522 0258 2006     		lsl	r0, r4, #24
 523 025a 0016     		asr	r0, r0, #24
 524              		.loc 1 330 0
 525              		@ sp needed for prologue
 526              	.LVL70:
 527              	.LVL71:
 528              	.LVL72:
 529              	.LVL73:
 530 025c F0BC     		pop	{r4, r5, r6, r7}
 531 025e 02BC     		pop	{r1}
 532 0260 0847     		bx	r1
 533              	.LFE4:
 534              		.size	eepromPageRead, .-eepromPageRead
 535 0262 C046     		.align	2
 536              		.global	eepromPoll
 537              		.code 16
 538              		.thumb_func
 539              		.type	eepromPoll, %function
 540              	eepromPoll:
 541              	.LFB2:
 542              		.loc 1 38 0
 543 0264 30B5     		push	{r4, r5, lr}
 544              	.LCFI5:
 545              	.LVL74:
 546              	.L104:
 547              		.loc 1 46 0
 548 0266 FFF7FEFF 		bl	i2cStart
 549 026a 0006     		lsl	r0, r0, #24
 550              		.loc 1 49 0
 551 026c 050E     		lsr	r5, r0, #24
 552 026e 0016     		asr	r0, r0, #24
 553 0270 0128     		cmp	r0, #1
 554 0272 16D1     		bne	.L105
 555              	.LVL75:
 556              	.L108:
 557              		.loc 1 55 0
 558 0274 A020     		mov	r0, #160
 559              	.LVL76:
 560 0276 FFF7FEFF 		bl	i2cPutChar
 561 027a 0006     		lsl	r0, r0, #24
 562 027c 000E     		lsr	r0, r0, #24
 563              	.LVL77:
 564              		.loc 1 53 0
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 20


 565 027e 0306     		lsl	r3, r0, #24
 566 0280 FC28     		cmp	r0, #252
 567 0282 F7D0     		beq	.L108
 568              		.loc 1 59 0
 569 0284 1D0E     		lsr	r5, r3, #24
 570              	.LVL78:
 571 0286 1B16     		asr	r3, r3, #24
 572 0288 012B     		cmp	r3, #1
 573 028a 0AD1     		bne	.L105
 574              		.loc 1 63 0
 575 028c FFF7FEFF 		bl	i2cCheckStatus
 576              		.loc 1 65 0
 577 0290 1828     		cmp	r0, #24
 578 0292 04D0     		beq	.L121
 579              	.LVL79:
 580              		.loc 1 70 0
 581 0294 2028     		cmp	r0, #32
 582 0296 04D0     		beq	.L105
 583              		.loc 1 76 0
 584 0298 F828     		cmp	r0, #248
 585 029a 02D0     		beq	.L105
 586 029c FF25     		mov	r5, #255
 587              	.L121:
 588 029e 0124     		mov	r4, #1
 589 02a0 00E0     		b	.L112
 590              	.L105:
 591 02a2 0024     		mov	r4, #0
 592              	.L112:
 593              		.loc 1 85 0
 594 02a4 FFF7FEFF 		bl	i2cStop
 595              	.LVL80:
 596              		.loc 1 43 0
 597 02a8 002C     		cmp	r4, #0
 598 02aa DCD0     		beq	.L104
 599 02ac 2806     		lsl	r0, r5, #24
 600 02ae 0016     		asr	r0, r0, #24
 601              		.loc 1 92 0
 602              		@ sp needed for prologue
 603              	.LVL81:
 604              	.LVL82:
 605 02b0 30BC     		pop	{r4, r5}
 606 02b2 02BC     		pop	{r1}
 607 02b4 0847     		bx	r1
 608              	.LFE2:
 609              		.size	eepromPoll, .-eepromPoll
 610              		.section	.debug_frame,"",%progbits
 611              	.Lframe0:
 612 0000 0C000000 		.4byte	.LECIE0-.LSCIE0
 613              	.LSCIE0:
 614 0004 FFFFFFFF 		.4byte	0xffffffff
 615 0008 01       		.byte	0x1
 616 0009 00       		.ascii	"\000"
 617 000a 01       		.uleb128 0x1
 618 000b 7C       		.sleb128 -4
 619 000c 0E       		.byte	0xe
 620 000d 0C       		.byte	0xc
 621 000e 0D       		.uleb128 0xd
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 21


 622 000f 00       		.uleb128 0x0
 623              		.align	2
 624              	.LECIE0:
 625              	.LSFDE0:
 626 0010 18000000 		.4byte	.LEFDE0-.LASFDE0
 627              	.LASFDE0:
 628 0014 00000000 		.4byte	.Lframe0
 629 0018 00000000 		.4byte	.LFB3
 630 001c 96000000 		.4byte	.LFE3-.LFB3
 631 0020 42       		.byte	0x4
 632              		.4byte	.LCFI0-.LFB3
 633 0021 0E       		.byte	0xe
 634 0022 0C       		.uleb128 0xc
 635 0023 84       		.byte	0x84
 636 0024 03       		.uleb128 0x3
 637 0025 85       		.byte	0x85
 638 0026 02       		.uleb128 0x2
 639 0027 8E       		.byte	0x8e
 640 0028 01       		.uleb128 0x1
 641 0029 000000   		.align	2
 642              	.LEFDE0:
 643              	.LSFDE2:
 644 002c 1C000000 		.4byte	.LEFDE2-.LASFDE2
 645              	.LASFDE2:
 646 0030 00000000 		.4byte	.Lframe0
 647 0034 98000000 		.4byte	.LFB6
 648 0038 E8000000 		.4byte	.LFE6-.LFB6
 649 003c 42       		.byte	0x4
 650              		.4byte	.LCFI1-.LFB6
 651 003d 0E       		.byte	0xe
 652 003e 14       		.uleb128 0x14
 653 003f 84       		.byte	0x84
 654 0040 05       		.uleb128 0x5
 655 0041 85       		.byte	0x85
 656 0042 04       		.uleb128 0x4
 657 0043 86       		.byte	0x86
 658 0044 03       		.uleb128 0x3
 659 0045 87       		.byte	0x87
 660 0046 02       		.uleb128 0x2
 661 0047 8E       		.byte	0x8e
 662 0048 01       		.uleb128 0x1
 663 0049 46       		.byte	0x4
 664              		.4byte	.LCFI2-.LCFI1
 665 004a 0E       		.byte	0xe
 666 004b 1C       		.uleb128 0x1c
 667              		.align	2
 668              	.LEFDE2:
 669              	.LSFDE4:
 670 004c 1C000000 		.4byte	.LEFDE4-.LASFDE4
 671              	.LASFDE4:
 672 0050 00000000 		.4byte	.Lframe0
 673 0054 80010000 		.4byte	.LFB5
 674 0058 6A000000 		.4byte	.LFE5-.LFB5
 675 005c 42       		.byte	0x4
 676              		.4byte	.LCFI3-.LFB5
 677 005d 0E       		.byte	0xe
 678 005e 14       		.uleb128 0x14
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 22


 679 005f 84       		.byte	0x84
 680 0060 05       		.uleb128 0x5
 681 0061 85       		.byte	0x85
 682 0062 04       		.uleb128 0x4
 683 0063 86       		.byte	0x86
 684 0064 03       		.uleb128 0x3
 685 0065 87       		.byte	0x87
 686 0066 02       		.uleb128 0x2
 687 0067 8E       		.byte	0x8e
 688 0068 01       		.uleb128 0x1
 689 0069 000000   		.align	2
 690              	.LEFDE4:
 691              	.LSFDE6:
 692 006c 1C000000 		.4byte	.LEFDE6-.LASFDE6
 693              	.LASFDE6:
 694 0070 00000000 		.4byte	.Lframe0
 695 0074 EC010000 		.4byte	.LFB4
 696 0078 76000000 		.4byte	.LFE4-.LFB4
 697 007c 42       		.byte	0x4
 698              		.4byte	.LCFI4-.LFB4
 699 007d 0E       		.byte	0xe
 700 007e 14       		.uleb128 0x14
 701 007f 84       		.byte	0x84
 702 0080 05       		.uleb128 0x5
 703 0081 85       		.byte	0x85
 704 0082 04       		.uleb128 0x4
 705 0083 86       		.byte	0x86
 706 0084 03       		.uleb128 0x3
 707 0085 87       		.byte	0x87
 708 0086 02       		.uleb128 0x2
 709 0087 8E       		.byte	0x8e
 710 0088 01       		.uleb128 0x1
 711 0089 000000   		.align	2
 712              	.LEFDE6:
 713              	.LSFDE8:
 714 008c 18000000 		.4byte	.LEFDE8-.LASFDE8
 715              	.LASFDE8:
 716 0090 00000000 		.4byte	.Lframe0
 717 0094 64020000 		.4byte	.LFB2
 718 0098 52000000 		.4byte	.LFE2-.LFB2
 719 009c 42       		.byte	0x4
 720              		.4byte	.LCFI5-.LFB2
 721 009d 0E       		.byte	0xe
 722 009e 0C       		.uleb128 0xc
 723 009f 84       		.byte	0x84
 724 00a0 03       		.uleb128 0x3
 725 00a1 85       		.byte	0x85
 726 00a2 02       		.uleb128 0x2
 727 00a3 8E       		.byte	0x8e
 728 00a4 01       		.uleb128 0x1
 729 00a5 000000   		.align	2
 730              	.LEFDE8:
 731              		.text
 732              	.Letext0:
 733 02b6 C046     		.section	.debug_loc,"",%progbits
 734              	.Ldebug_loc0:
 735              	.LLST0:
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 23


 736 0000 00000000 		.4byte	.LFB3-.Ltext0
 737 0004 02000000 		.4byte	.LCFI0-.Ltext0
 738 0008 0100     		.2byte	0x1
 739 000a 5D       		.byte	0x5d
 740 000b 02000000 		.4byte	.LCFI0-.Ltext0
 741 000f 96000000 		.4byte	.LFE3-.Ltext0
 742 0013 0200     		.2byte	0x2
 743 0015 7D       		.byte	0x7d
 744 0016 0C       		.sleb128 12
 745 0017 00000000 		.4byte	0x0
 746 001b 00000000 		.4byte	0x0
 747              	.LLST1:
 748 001f 02000000 		.4byte	.LVL0-.Ltext0
 749 0023 04000000 		.4byte	.LVL1-.Ltext0
 750 0027 0100     		.2byte	0x1
 751 0029 50       		.byte	0x50
 752 002a 08000000 		.4byte	.LVL3-.Ltext0
 753 002e 70000000 		.4byte	.LVL17-.Ltext0
 754 0032 0100     		.2byte	0x1
 755 0034 55       		.byte	0x55
 756 0035 7E000000 		.4byte	.LVL18-.Ltext0
 757 0039 90000000 		.4byte	.LVL20-.Ltext0
 758 003d 0100     		.2byte	0x1
 759 003f 55       		.byte	0x55
 760 0040 00000000 		.4byte	0x0
 761 0044 00000000 		.4byte	0x0
 762              	.LLST2:
 763 0048 02000000 		.4byte	.LVL0-.Ltext0
 764 004c 06000000 		.4byte	.LVL2-.Ltext0
 765 0050 0100     		.2byte	0x1
 766 0052 51       		.byte	0x51
 767 0053 0A000000 		.4byte	.LVL4-.Ltext0
 768 0057 3C000000 		.4byte	.LVL10-.Ltext0
 769 005b 0100     		.2byte	0x1
 770 005d 54       		.byte	0x54
 771 005e 4C000000 		.4byte	.LVL13-.Ltext0
 772 0062 64000000 		.4byte	.LVL16-.Ltext0
 773 0066 0100     		.2byte	0x1
 774 0068 54       		.byte	0x54
 775 0069 00000000 		.4byte	0x0
 776 006d 00000000 		.4byte	0x0
 777              	.LLST3:
 778 0071 20000000 		.4byte	.LVL5-.Ltext0
 779 0075 24000000 		.4byte	.LVL6-.Ltext0
 780 0079 0100     		.2byte	0x1
 781 007b 50       		.byte	0x50
 782 007c 46000000 		.4byte	.LVL12-.Ltext0
 783 0080 4C000000 		.4byte	.LVL13-.Ltext0
 784 0084 0100     		.2byte	0x1
 785 0086 50       		.byte	0x50
 786 0087 50000000 		.4byte	.LVL14-.Ltext0
 787 008b 54000000 		.4byte	.LVL15-.Ltext0
 788 008f 0100     		.2byte	0x1
 789 0091 50       		.byte	0x50
 790 0092 64000000 		.4byte	.LVL16-.Ltext0
 791 0096 90000000 		.4byte	.LVL19-.Ltext0
 792 009a 0100     		.2byte	0x1
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 24


 793 009c 54       		.byte	0x54
 794 009d 00000000 		.4byte	0x0
 795 00a1 00000000 		.4byte	0x0
 796              	.LLST4:
 797 00a5 2C000000 		.4byte	.LVL7-.Ltext0
 798 00a9 30000000 		.4byte	.LVL8-.Ltext0
 799 00ad 0100     		.2byte	0x1
 800 00af 50       		.byte	0x50
 801 00b0 34000000 		.4byte	.LVL9-.Ltext0
 802 00b4 3E000000 		.4byte	.LVL11-.Ltext0
 803 00b8 0100     		.2byte	0x1
 804 00ba 50       		.byte	0x50
 805 00bb 4C000000 		.4byte	.LVL13-.Ltext0
 806 00bf 54000000 		.4byte	.LVL15-.Ltext0
 807 00c3 0100     		.2byte	0x1
 808 00c5 50       		.byte	0x50
 809 00c6 00000000 		.4byte	0x0
 810 00ca 00000000 		.4byte	0x0
 811              	.LLST5:
 812 00ce 98000000 		.4byte	.LFB6-.Ltext0
 813 00d2 9A000000 		.4byte	.LCFI1-.Ltext0
 814 00d6 0100     		.2byte	0x1
 815 00d8 5D       		.byte	0x5d
 816 00d9 9A000000 		.4byte	.LCFI1-.Ltext0
 817 00dd A0000000 		.4byte	.LCFI2-.Ltext0
 818 00e1 0200     		.2byte	0x2
 819 00e3 7D       		.byte	0x7d
 820 00e4 14       		.sleb128 20
 821 00e5 A0000000 		.4byte	.LCFI2-.Ltext0
 822 00e9 80010000 		.4byte	.LFE6-.Ltext0
 823 00ed 0200     		.2byte	0x2
 824 00ef 7D       		.byte	0x7d
 825 00f0 1C       		.sleb128 28
 826 00f1 00000000 		.4byte	0x0
 827 00f5 00000000 		.4byte	0x0
 828              	.LLST6:
 829 00f9 9A000000 		.4byte	.LVL21-.Ltext0
 830 00fd B0000000 		.4byte	.LVL26-.Ltext0
 831 0101 0100     		.2byte	0x1
 832 0103 50       		.byte	0x50
 833 0104 B0000000 		.4byte	.LVL26-.Ltext0
 834 0108 7A010000 		.4byte	.LVL39-.Ltext0
 835 010c 0100     		.2byte	0x1
 836 010e 56       		.byte	0x56
 837 010f 00000000 		.4byte	0x0
 838 0113 00000000 		.4byte	0x0
 839              	.LLST7:
 840 0117 9A000000 		.4byte	.LVL21-.Ltext0
 841 011b 9C000000 		.4byte	.LVL22-.Ltext0
 842 011f 0100     		.2byte	0x1
 843 0121 51       		.byte	0x51
 844 0122 AA000000 		.4byte	.LVL24-.Ltext0
 845 0126 80010000 		.4byte	.LFE6-.Ltext0
 846 012a 0200     		.2byte	0x2
 847 012c 91       		.byte	0x91
 848 012d 7C       		.sleb128 -4
 849 012e 00000000 		.4byte	0x0
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 25


 850 0132 00000000 		.4byte	0x0
 851              	.LLST8:
 852 0136 9A000000 		.4byte	.LVL21-.Ltext0
 853 013a B0000000 		.4byte	.LVL26-.Ltext0
 854 013e 0100     		.2byte	0x1
 855 0140 52       		.byte	0x52
 856 0141 B0000000 		.4byte	.LVL26-.Ltext0
 857 0145 7A010000 		.4byte	.LVL40-.Ltext0
 858 0149 0100     		.2byte	0x1
 859 014b 57       		.byte	0x57
 860 014c 00000000 		.4byte	0x0
 861 0150 00000000 		.4byte	0x0
 862              	.LLST9:
 863 0154 9A000000 		.4byte	.LVL21-.Ltext0
 864 0158 9E000000 		.4byte	.LVL23-.Ltext0
 865 015c 0100     		.2byte	0x1
 866 015e 53       		.byte	0x53
 867 015f AC000000 		.4byte	.LVL25-.Ltext0
 868 0163 80010000 		.4byte	.LFE6-.Ltext0
 869 0167 0200     		.2byte	0x2
 870 0169 91       		.byte	0x91
 871 016a 78       		.sleb128 -8
 872 016b 00000000 		.4byte	0x0
 873 016f 00000000 		.4byte	0x0
 874              	.LLST10:
 875 0173 B4000000 		.4byte	.LVL27-.Ltext0
 876 0177 7A010000 		.4byte	.LVL37-.Ltext0
 877 017b 0100     		.2byte	0x1
 878 017d 54       		.byte	0x54
 879 017e 00000000 		.4byte	0x0
 880 0182 00000000 		.4byte	0x0
 881              	.LLST11:
 882 0186 26010000 		.4byte	.LVL29-.Ltext0
 883 018a 2A010000 		.4byte	.LVL30-.Ltext0
 884 018e 0100     		.2byte	0x1
 885 0190 50       		.byte	0x50
 886 0191 2E010000 		.4byte	.LVL31-.Ltext0
 887 0195 3E010000 		.4byte	.LVL32-.Ltext0
 888 0199 0100     		.2byte	0x1
 889 019b 50       		.byte	0x50
 890 019c 40010000 		.4byte	.LVL33-.Ltext0
 891 01a0 42010000 		.4byte	.LVL34-.Ltext0
 892 01a4 0100     		.2byte	0x1
 893 01a6 50       		.byte	0x50
 894 01a7 5C010000 		.4byte	.LVL35-.Ltext0
 895 01ab 74010000 		.4byte	.LVL36-.Ltext0
 896 01af 0100     		.2byte	0x1
 897 01b1 50       		.byte	0x50
 898 01b2 00000000 		.4byte	0x0
 899 01b6 00000000 		.4byte	0x0
 900              	.LLST12:
 901 01ba CC000000 		.4byte	.LVL28-.Ltext0
 902 01be 7A010000 		.4byte	.LVL38-.Ltext0
 903 01c2 0100     		.2byte	0x1
 904 01c4 55       		.byte	0x55
 905 01c5 00000000 		.4byte	0x0
 906 01c9 00000000 		.4byte	0x0
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 26


 907              	.LLST13:
 908 01cd 80010000 		.4byte	.LFB5-.Ltext0
 909 01d1 82010000 		.4byte	.LCFI3-.Ltext0
 910 01d5 0100     		.2byte	0x1
 911 01d7 5D       		.byte	0x5d
 912 01d8 82010000 		.4byte	.LCFI3-.Ltext0
 913 01dc EA010000 		.4byte	.LFE5-.Ltext0
 914 01e0 0200     		.2byte	0x2
 915 01e2 7D       		.byte	0x7d
 916 01e3 14       		.sleb128 20
 917 01e4 00000000 		.4byte	0x0
 918 01e8 00000000 		.4byte	0x0
 919              	.LLST14:
 920 01ec 82010000 		.4byte	.LVL41-.Ltext0
 921 01f0 84010000 		.4byte	.LVL42-.Ltext0
 922 01f4 0100     		.2byte	0x1
 923 01f6 50       		.byte	0x50
 924 01f7 8A010000 		.4byte	.LVL44-.Ltext0
 925 01fb BE010000 		.4byte	.LVL48-.Ltext0
 926 01ff 0100     		.2byte	0x1
 927 0201 55       		.byte	0x55
 928 0202 DC010000 		.4byte	.LVL49-.Ltext0
 929 0206 E4010000 		.4byte	.LVL51-.Ltext0
 930 020a 0100     		.2byte	0x1
 931 020c 55       		.byte	0x55
 932 020d 00000000 		.4byte	0x0
 933 0211 00000000 		.4byte	0x0
 934              	.LLST15:
 935 0215 82010000 		.4byte	.LVL41-.Ltext0
 936 0219 90010000 		.4byte	.LVL46-.Ltext0
 937 021d 0100     		.2byte	0x1
 938 021f 51       		.byte	0x51
 939 0220 90010000 		.4byte	.LVL46-.Ltext0
 940 0224 E4010000 		.4byte	.LVL53-.Ltext0
 941 0228 0100     		.2byte	0x1
 942 022a 57       		.byte	0x57
 943 022b 00000000 		.4byte	0x0
 944 022f 00000000 		.4byte	0x0
 945              	.LLST16:
 946 0233 82010000 		.4byte	.LVL41-.Ltext0
 947 0237 86010000 		.4byte	.LVL43-.Ltext0
 948 023b 0100     		.2byte	0x1
 949 023d 52       		.byte	0x52
 950 023e 8C010000 		.4byte	.LVL45-.Ltext0
 951 0242 E4010000 		.4byte	.LVL52-.Ltext0
 952 0246 0100     		.2byte	0x1
 953 0248 56       		.byte	0x56
 954 0249 00000000 		.4byte	0x0
 955 024d 00000000 		.4byte	0x0
 956              	.LLST17:
 957 0251 94010000 		.4byte	.LVL47-.Ltext0
 958 0255 E4010000 		.4byte	.LVL50-.Ltext0
 959 0259 0100     		.2byte	0x1
 960 025b 54       		.byte	0x54
 961 025c 00000000 		.4byte	0x0
 962 0260 00000000 		.4byte	0x0
 963              	.LLST18:
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 27


 964 0264 EC010000 		.4byte	.LFB4-.Ltext0
 965 0268 EE010000 		.4byte	.LCFI4-.Ltext0
 966 026c 0100     		.2byte	0x1
 967 026e 5D       		.byte	0x5d
 968 026f EE010000 		.4byte	.LCFI4-.Ltext0
 969 0273 62020000 		.4byte	.LFE4-.Ltext0
 970 0277 0200     		.2byte	0x2
 971 0279 7D       		.byte	0x7d
 972 027a 14       		.sleb128 20
 973 027b 00000000 		.4byte	0x0
 974 027f 00000000 		.4byte	0x0
 975              	.LLST19:
 976 0283 EE010000 		.4byte	.LVL54-.Ltext0
 977 0287 F2010000 		.4byte	.LVL55-.Ltext0
 978 028b 0100     		.2byte	0x1
 979 028d 50       		.byte	0x50
 980 028e F2010000 		.4byte	.LVL55-.Ltext0
 981 0292 00020000 		.4byte	.LVL59-.Ltext0
 982 0296 0100     		.2byte	0x1
 983 0298 53       		.byte	0x53
 984 0299 00000000 		.4byte	0x0
 985 029d 00000000 		.4byte	0x0
 986              	.LLST20:
 987 02a1 EE010000 		.4byte	.LVL54-.Ltext0
 988 02a5 FA010000 		.4byte	.LVL57-.Ltext0
 989 02a9 0100     		.2byte	0x1
 990 02ab 51       		.byte	0x51
 991 02ac FA010000 		.4byte	.LVL57-.Ltext0
 992 02b0 5C020000 		.4byte	.LVL71-.Ltext0
 993 02b4 0100     		.2byte	0x1
 994 02b6 55       		.byte	0x55
 995 02b7 00000000 		.4byte	0x0
 996 02bb 00000000 		.4byte	0x0
 997              	.LLST21:
 998 02bf EE010000 		.4byte	.LVL54-.Ltext0
 999 02c3 F4010000 		.4byte	.LVL56-.Ltext0
 1000 02c7 0100     		.2byte	0x1
 1001 02c9 52       		.byte	0x52
 1002 02ca FC010000 		.4byte	.LVL58-.Ltext0
 1003 02ce 5C020000 		.4byte	.LVL72-.Ltext0
 1004 02d2 0100     		.2byte	0x1
 1005 02d4 56       		.byte	0x56
 1006 02d5 00000000 		.4byte	0x0
 1007 02d9 00000000 		.4byte	0x0
 1008              	.LLST22:
 1009 02dd 04020000 		.4byte	.LVL60-.Ltext0
 1010 02e1 5C020000 		.4byte	.LVL70-.Ltext0
 1011 02e5 0100     		.2byte	0x1
 1012 02e7 54       		.byte	0x54
 1013 02e8 00000000 		.4byte	0x0
 1014 02ec 00000000 		.4byte	0x0
 1015              	.LLST23:
 1016 02f0 0E020000 		.4byte	.LVL62-.Ltext0
 1017 02f4 12020000 		.4byte	.LVL63-.Ltext0
 1018 02f8 0100     		.2byte	0x1
 1019 02fa 50       		.byte	0x50
 1020 02fb 16020000 		.4byte	.LVL64-.Ltext0
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 28


 1021 02ff 24020000 		.4byte	.LVL65-.Ltext0
 1022 0303 0100     		.2byte	0x1
 1023 0305 50       		.byte	0x50
 1024 0306 26020000 		.4byte	.LVL66-.Ltext0
 1025 030a 28020000 		.4byte	.LVL67-.Ltext0
 1026 030e 0100     		.2byte	0x1
 1027 0310 50       		.byte	0x50
 1028 0311 42020000 		.4byte	.LVL68-.Ltext0
 1029 0315 58020000 		.4byte	.LVL69-.Ltext0
 1030 0319 0100     		.2byte	0x1
 1031 031b 50       		.byte	0x50
 1032 031c 00000000 		.4byte	0x0
 1033 0320 00000000 		.4byte	0x0
 1034              	.LLST24:
 1035 0324 0C020000 		.4byte	.LVL61-.Ltext0
 1036 0328 5C020000 		.4byte	.LVL73-.Ltext0
 1037 032c 0100     		.2byte	0x1
 1038 032e 57       		.byte	0x57
 1039 032f 00000000 		.4byte	0x0
 1040 0333 00000000 		.4byte	0x0
 1041              	.LLST25:
 1042 0337 64020000 		.4byte	.LFB2-.Ltext0
 1043 033b 66020000 		.4byte	.LCFI5-.Ltext0
 1044 033f 0100     		.2byte	0x1
 1045 0341 5D       		.byte	0x5d
 1046 0342 66020000 		.4byte	.LCFI5-.Ltext0
 1047 0346 B6020000 		.4byte	.LFE2-.Ltext0
 1048 034a 0200     		.2byte	0x2
 1049 034c 7D       		.byte	0x7d
 1050 034d 0C       		.sleb128 12
 1051 034e 00000000 		.4byte	0x0
 1052 0352 00000000 		.4byte	0x0
 1053              	.LLST26:
 1054 0356 66020000 		.4byte	.LVL74-.Ltext0
 1055 035a 74020000 		.4byte	.LVL75-.Ltext0
 1056 035e 0100     		.2byte	0x1
 1057 0360 55       		.byte	0x55
 1058 0361 74020000 		.4byte	.LVL75-.Ltext0
 1059 0365 76020000 		.4byte	.LVL76-.Ltext0
 1060 0369 0100     		.2byte	0x1
 1061 036b 50       		.byte	0x50
 1062 036c 76020000 		.4byte	.LVL76-.Ltext0
 1063 0370 7E020000 		.4byte	.LVL77-.Ltext0
 1064 0374 0100     		.2byte	0x1
 1065 0376 55       		.byte	0x55
 1066 0377 7E020000 		.4byte	.LVL77-.Ltext0
 1067 037b 86020000 		.4byte	.LVL78-.Ltext0
 1068 037f 0100     		.2byte	0x1
 1069 0381 50       		.byte	0x50
 1070 0382 86020000 		.4byte	.LVL78-.Ltext0
 1071 0386 B0020000 		.4byte	.LVL82-.Ltext0
 1072 038a 0100     		.2byte	0x1
 1073 038c 55       		.byte	0x55
 1074 038d 00000000 		.4byte	0x0
 1075 0391 00000000 		.4byte	0x0
 1076              	.LLST27:
 1077 0395 94020000 		.4byte	.LVL79-.Ltext0
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 29


 1078 0399 A8020000 		.4byte	.LVL80-.Ltext0
 1079 039d 0100     		.2byte	0x1
 1080 039f 50       		.byte	0x50
 1081 03a0 00000000 		.4byte	0x0
 1082 03a4 00000000 		.4byte	0x0
 1083              	.LLST28:
 1084 03a8 66020000 		.4byte	.LVL74-.Ltext0
 1085 03ac B0020000 		.4byte	.LVL81-.Ltext0
 1086 03b0 0100     		.2byte	0x1
 1087 03b2 54       		.byte	0x54
 1088 03b3 00000000 		.4byte	0x0
 1089 03b7 00000000 		.4byte	0x0
 1090              		.file 2 "./startup/general.h"
 1091              		.section	.debug_info
 1092 0000 9E020000 		.4byte	0x29e
 1093 0004 0200     		.2byte	0x2
 1094 0006 00000000 		.4byte	.Ldebug_abbrev0
 1095 000a 04       		.byte	0x4
 1096 000b 01       		.uleb128 0x1
 1097 000c 43000000 		.4byte	.LASF21
 1098 0010 01       		.byte	0x1
 1099 0011 59010000 		.4byte	.LASF22
 1100 0015 B3000000 		.4byte	.LASF23
 1101 0019 00000000 		.4byte	.Ltext0
 1102 001d B6020000 		.4byte	.Letext0
 1103 0021 00000000 		.4byte	.Ldebug_line0
 1104 0025 02       		.uleb128 0x2
 1105 0026 74553800 		.ascii	"tU8\000"
 1106 002a 02       		.byte	0x2
 1107 002b 47       		.byte	0x47
 1108 002c 30000000 		.4byte	0x30
 1109 0030 03       		.uleb128 0x3
 1110 0031 01       		.byte	0x1
 1111 0032 08       		.byte	0x8
 1112 0033 61000000 		.4byte	.LASF1
 1113 0037 04       		.uleb128 0x4
 1114 0038 44010000 		.4byte	.LASF0
 1115 003c 02       		.byte	0x2
 1116 003d 48       		.byte	0x48
 1117 003e 42000000 		.4byte	0x42
 1118 0042 03       		.uleb128 0x3
 1119 0043 02       		.byte	0x2
 1120 0044 07       		.byte	0x7
 1121 0045 94000000 		.4byte	.LASF2
 1122 0049 03       		.uleb128 0x3
 1123 004a 04       		.byte	0x4
 1124 004b 07       		.byte	0x7
 1125 004c 08000000 		.4byte	.LASF3
 1126 0050 02       		.uleb128 0x2
 1127 0051 74533800 		.ascii	"tS8\000"
 1128 0055 02       		.byte	0x2
 1129 0056 4A       		.byte	0x4a
 1130 0057 5B000000 		.4byte	0x5b
 1131 005b 03       		.uleb128 0x3
 1132 005c 01       		.byte	0x1
 1133 005d 06       		.byte	0x6
 1134 005e A7000000 		.4byte	.LASF4
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 30


 1135 0062 03       		.uleb128 0x3
 1136 0063 02       		.byte	0x2
 1137 0064 05       		.byte	0x5
 1138 0065 4F010000 		.4byte	.LASF5
 1139 0069 05       		.uleb128 0x5
 1140 006a 04       		.byte	0x4
 1141 006b 05       		.byte	0x5
 1142 006c 696E7400 		.ascii	"int\000"
 1143 0070 04       		.uleb128 0x4
 1144 0071 49010000 		.4byte	.LASF6
 1145 0075 02       		.byte	0x2
 1146 0076 4D       		.byte	0x4d
 1147 0077 30000000 		.4byte	0x30
 1148 007b 06       		.uleb128 0x6
 1149 007c 01       		.byte	0x1
 1150 007d 75000000 		.4byte	.LASF11
 1151 0081 01       		.byte	0x1
 1152 0082 6E       		.byte	0x6e
 1153 0083 01       		.byte	0x1
 1154 0084 50000000 		.4byte	0x50
 1155 0088 00000000 		.4byte	.LFB3
 1156 008c 96000000 		.4byte	.LFE3
 1157 0090 00000000 		.4byte	.LLST0
 1158 0094 D5000000 		.4byte	0xd5
 1159 0098 07       		.uleb128 0x7
 1160 0099 4F000000 		.4byte	.LASF7
 1161 009d 01       		.byte	0x1
 1162 009e 6C       		.byte	0x6c
 1163 009f 25000000 		.4byte	0x25
 1164 00a3 1F000000 		.4byte	.LLST1
 1165 00a7 07       		.uleb128 0x7
 1166 00a8 3B000000 		.4byte	.LASF8
 1167 00ac 01       		.byte	0x1
 1168 00ad 6D       		.byte	0x6d
 1169 00ae 37000000 		.4byte	0x37
 1170 00b2 48000000 		.4byte	.LLST2
 1171 00b6 08       		.uleb128 0x8
 1172 00b7 21000000 		.4byte	.LASF9
 1173 00bb 01       		.byte	0x1
 1174 00bc 6F       		.byte	0x6f
 1175 00bd 50000000 		.4byte	0x50
 1176 00c1 71000000 		.4byte	.LLST3
 1177 00c5 08       		.uleb128 0x8
 1178 00c6 34000000 		.4byte	.LASF10
 1179 00ca 01       		.byte	0x1
 1180 00cb 70       		.byte	0x70
 1181 00cc 25000000 		.4byte	0x25
 1182 00d0 A5000000 		.4byte	.LLST4
 1183 00d4 00       		.byte	0x0
 1184 00d5 09       		.uleb128 0x9
 1185 00d6 01       		.byte	0x1
 1186 00d7 00000000 		.4byte	.LASF12
 1187 00db 01       		.byte	0x1
 1188 00dc 8E01     		.2byte	0x18e
 1189 00de 01       		.byte	0x1
 1190 00df 50000000 		.4byte	0x50
 1191 00e3 98000000 		.4byte	.LFB6
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 31


 1192 00e7 80010000 		.4byte	.LFE6
 1193 00eb CE000000 		.4byte	.LLST5
 1194 00ef 62010000 		.4byte	0x162
 1195 00f3 0A       		.uleb128 0xa
 1196 00f4 5C000000 		.4byte	.LASF13
 1197 00f8 01       		.byte	0x1
 1198 00f9 8D01     		.2byte	0x18d
 1199 00fb 62010000 		.4byte	0x162
 1200 00ff F9000000 		.4byte	.LLST6
 1201 0103 0B       		.uleb128 0xb
 1202 0104 6C656E00 		.ascii	"len\000"
 1203 0108 01       		.byte	0x1
 1204 0109 8D01     		.2byte	0x18d
 1205 010b 37000000 		.4byte	0x37
 1206 010f 17010000 		.4byte	.LLST7
 1207 0113 0A       		.uleb128 0xa
 1208 0114 6F000000 		.4byte	.LASF14
 1209 0118 01       		.byte	0x1
 1210 0119 8D01     		.2byte	0x18d
 1211 011b 62010000 		.4byte	0x162
 1212 011f 36010000 		.4byte	.LLST8
 1213 0123 0A       		.uleb128 0xa
 1214 0124 3F010000 		.4byte	.LASF15
 1215 0128 01       		.byte	0x1
 1216 0129 8D01     		.2byte	0x18d
 1217 012b 37000000 		.4byte	0x37
 1218 012f 54010000 		.4byte	.LLST9
 1219 0133 0C       		.uleb128 0xc
 1220 0134 21000000 		.4byte	.LASF9
 1221 0138 01       		.byte	0x1
 1222 0139 8F01     		.2byte	0x18f
 1223 013b 50000000 		.4byte	0x50
 1224 013f 73010000 		.4byte	.LLST10
 1225 0143 0C       		.uleb128 0xc
 1226 0144 34000000 		.4byte	.LASF10
 1227 0148 01       		.byte	0x1
 1228 0149 9001     		.2byte	0x190
 1229 014b 25000000 		.4byte	0x25
 1230 014f 86010000 		.4byte	.LLST11
 1231 0153 0D       		.uleb128 0xd
 1232 0154 6900     		.ascii	"i\000"
 1233 0156 01       		.byte	0x1
 1234 0157 9101     		.2byte	0x191
 1235 0159 37000000 		.4byte	0x37
 1236 015d BA010000 		.4byte	.LLST12
 1237 0161 00       		.byte	0x0
 1238 0162 0E       		.uleb128 0xe
 1239 0163 04       		.byte	0x4
 1240 0164 25000000 		.4byte	0x25
 1241 0168 09       		.uleb128 0x9
 1242 0169 01       		.byte	0x1
 1243 016a 15000000 		.4byte	.LASF16
 1244 016e 01       		.byte	0x1
 1245 016f 5101     		.2byte	0x151
 1246 0171 01       		.byte	0x1
 1247 0172 50000000 		.4byte	0x50
 1248 0176 80010000 		.4byte	.LFB5
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 32


 1249 017a EA010000 		.4byte	.LFE5
 1250 017e CD010000 		.4byte	.LLST13
 1251 0182 DD010000 		.4byte	0x1dd
 1252 0186 0A       		.uleb128 0xa
 1253 0187 57000000 		.4byte	.LASF17
 1254 018b 01       		.byte	0x1
 1255 018c 4E01     		.2byte	0x14e
 1256 018e 37000000 		.4byte	0x37
 1257 0192 EC010000 		.4byte	.LLST14
 1258 0196 0A       		.uleb128 0xa
 1259 0197 62010000 		.4byte	.LASF18
 1260 019b 01       		.byte	0x1
 1261 019c 4F01     		.2byte	0x14f
 1262 019e 62010000 		.4byte	0x162
 1263 01a2 15020000 		.4byte	.LLST15
 1264 01a6 0B       		.uleb128 0xb
 1265 01a7 6C656E00 		.ascii	"len\000"
 1266 01ab 01       		.byte	0x1
 1267 01ac 5001     		.2byte	0x150
 1268 01ae 37000000 		.4byte	0x37
 1269 01b2 33020000 		.4byte	.LLST16
 1270 01b6 0C       		.uleb128 0xc
 1271 01b7 21000000 		.4byte	.LASF9
 1272 01bb 01       		.byte	0x1
 1273 01bc 5201     		.2byte	0x152
 1274 01be 50000000 		.4byte	0x50
 1275 01c2 51020000 		.4byte	.LLST17
 1276 01c6 0F       		.uleb128 0xf
 1277 01c7 34000000 		.4byte	.LASF10
 1278 01cb 01       		.byte	0x1
 1279 01cc 5301     		.2byte	0x153
 1280 01ce 25000000 		.4byte	0x25
 1281 01d2 10       		.uleb128 0x10
 1282 01d3 6900     		.ascii	"i\000"
 1283 01d5 01       		.byte	0x1
 1284 01d6 5401     		.2byte	0x154
 1285 01d8 25000000 		.4byte	0x25
 1286 01dc 00       		.byte	0x0
 1287 01dd 09       		.uleb128 0x9
 1288 01de 01       		.byte	0x1
 1289 01df 85000000 		.4byte	.LASF19
 1290 01e3 01       		.byte	0x1
 1291 01e4 0E01     		.2byte	0x10e
 1292 01e6 01       		.byte	0x1
 1293 01e7 50000000 		.4byte	0x50
 1294 01eb EC010000 		.4byte	.LFB4
 1295 01ef 62020000 		.4byte	.LFE4
 1296 01f3 64020000 		.4byte	.LLST18
 1297 01f7 5A020000 		.4byte	0x25a
 1298 01fb 0A       		.uleb128 0xa
 1299 01fc 3B000000 		.4byte	.LASF8
 1300 0200 01       		.byte	0x1
 1301 0201 0B01     		.2byte	0x10b
 1302 0203 37000000 		.4byte	0x37
 1303 0207 83020000 		.4byte	.LLST19
 1304 020b 0A       		.uleb128 0xa
 1305 020c 5C000000 		.4byte	.LASF13
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 33


 1306 0210 01       		.byte	0x1
 1307 0211 0C01     		.2byte	0x10c
 1308 0213 62010000 		.4byte	0x162
 1309 0217 A1020000 		.4byte	.LLST20
 1310 021b 0B       		.uleb128 0xb
 1311 021c 6C656E00 		.ascii	"len\000"
 1312 0220 01       		.byte	0x1
 1313 0221 0D01     		.2byte	0x10d
 1314 0223 37000000 		.4byte	0x37
 1315 0227 BF020000 		.4byte	.LLST21
 1316 022b 0C       		.uleb128 0xc
 1317 022c 21000000 		.4byte	.LASF9
 1318 0230 01       		.byte	0x1
 1319 0231 0F01     		.2byte	0x10f
 1320 0233 50000000 		.4byte	0x50
 1321 0237 DD020000 		.4byte	.LLST22
 1322 023b 0C       		.uleb128 0xc
 1323 023c 34000000 		.4byte	.LASF10
 1324 0240 01       		.byte	0x1
 1325 0241 1001     		.2byte	0x110
 1326 0243 25000000 		.4byte	0x25
 1327 0247 F0020000 		.4byte	.LLST23
 1328 024b 0D       		.uleb128 0xd
 1329 024c 6900     		.ascii	"i\000"
 1330 024e 01       		.byte	0x1
 1331 024f 1101     		.2byte	0x111
 1332 0251 37000000 		.4byte	0x37
 1333 0255 24030000 		.4byte	.LLST24
 1334 0259 00       		.byte	0x0
 1335 025a 11       		.uleb128 0x11
 1336 025b 01       		.byte	0x1
 1337 025c 29000000 		.4byte	.LASF24
 1338 0260 01       		.byte	0x1
 1339 0261 26       		.byte	0x26
 1340 0262 01       		.byte	0x1
 1341 0263 50000000 		.4byte	0x50
 1342 0267 64020000 		.4byte	.LFB2
 1343 026b B6020000 		.4byte	.LFE2
 1344 026f 37030000 		.4byte	.LLST25
 1345 0273 08       		.uleb128 0x8
 1346 0274 21000000 		.4byte	.LASF9
 1347 0278 01       		.byte	0x1
 1348 0279 27       		.byte	0x27
 1349 027a 50000000 		.4byte	0x50
 1350 027e 56030000 		.4byte	.LLST26
 1351 0282 08       		.uleb128 0x8
 1352 0283 34000000 		.4byte	.LASF10
 1353 0287 01       		.byte	0x1
 1354 0288 28       		.byte	0x28
 1355 0289 25000000 		.4byte	0x25
 1356 028d 95030000 		.4byte	.LLST27
 1357 0291 08       		.uleb128 0x8
 1358 0292 68010000 		.4byte	.LASF20
 1359 0296 01       		.byte	0x1
 1360 0297 29       		.byte	0x29
 1361 0298 70000000 		.4byte	0x70
 1362 029c A8030000 		.4byte	.LLST28
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 34


 1363 02a0 00       		.byte	0x0
 1364 02a1 00       		.byte	0x0
 1365              		.section	.debug_abbrev
 1366 0000 01       		.uleb128 0x1
 1367 0001 11       		.uleb128 0x11
 1368 0002 01       		.byte	0x1
 1369 0003 25       		.uleb128 0x25
 1370 0004 0E       		.uleb128 0xe
 1371 0005 13       		.uleb128 0x13
 1372 0006 0B       		.uleb128 0xb
 1373 0007 03       		.uleb128 0x3
 1374 0008 0E       		.uleb128 0xe
 1375 0009 1B       		.uleb128 0x1b
 1376 000a 0E       		.uleb128 0xe
 1377 000b 11       		.uleb128 0x11
 1378 000c 01       		.uleb128 0x1
 1379 000d 12       		.uleb128 0x12
 1380 000e 01       		.uleb128 0x1
 1381 000f 10       		.uleb128 0x10
 1382 0010 06       		.uleb128 0x6
 1383 0011 00       		.byte	0x0
 1384 0012 00       		.byte	0x0
 1385 0013 02       		.uleb128 0x2
 1386 0014 16       		.uleb128 0x16
 1387 0015 00       		.byte	0x0
 1388 0016 03       		.uleb128 0x3
 1389 0017 08       		.uleb128 0x8
 1390 0018 3A       		.uleb128 0x3a
 1391 0019 0B       		.uleb128 0xb
 1392 001a 3B       		.uleb128 0x3b
 1393 001b 0B       		.uleb128 0xb
 1394 001c 49       		.uleb128 0x49
 1395 001d 13       		.uleb128 0x13
 1396 001e 00       		.byte	0x0
 1397 001f 00       		.byte	0x0
 1398 0020 03       		.uleb128 0x3
 1399 0021 24       		.uleb128 0x24
 1400 0022 00       		.byte	0x0
 1401 0023 0B       		.uleb128 0xb
 1402 0024 0B       		.uleb128 0xb
 1403 0025 3E       		.uleb128 0x3e
 1404 0026 0B       		.uleb128 0xb
 1405 0027 03       		.uleb128 0x3
 1406 0028 0E       		.uleb128 0xe
 1407 0029 00       		.byte	0x0
 1408 002a 00       		.byte	0x0
 1409 002b 04       		.uleb128 0x4
 1410 002c 16       		.uleb128 0x16
 1411 002d 00       		.byte	0x0
 1412 002e 03       		.uleb128 0x3
 1413 002f 0E       		.uleb128 0xe
 1414 0030 3A       		.uleb128 0x3a
 1415 0031 0B       		.uleb128 0xb
 1416 0032 3B       		.uleb128 0x3b
 1417 0033 0B       		.uleb128 0xb
 1418 0034 49       		.uleb128 0x49
 1419 0035 13       		.uleb128 0x13
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 35


 1420 0036 00       		.byte	0x0
 1421 0037 00       		.byte	0x0
 1422 0038 05       		.uleb128 0x5
 1423 0039 24       		.uleb128 0x24
 1424 003a 00       		.byte	0x0
 1425 003b 0B       		.uleb128 0xb
 1426 003c 0B       		.uleb128 0xb
 1427 003d 3E       		.uleb128 0x3e
 1428 003e 0B       		.uleb128 0xb
 1429 003f 03       		.uleb128 0x3
 1430 0040 08       		.uleb128 0x8
 1431 0041 00       		.byte	0x0
 1432 0042 00       		.byte	0x0
 1433 0043 06       		.uleb128 0x6
 1434 0044 2E       		.uleb128 0x2e
 1435 0045 01       		.byte	0x1
 1436 0046 3F       		.uleb128 0x3f
 1437 0047 0C       		.uleb128 0xc
 1438 0048 03       		.uleb128 0x3
 1439 0049 0E       		.uleb128 0xe
 1440 004a 3A       		.uleb128 0x3a
 1441 004b 0B       		.uleb128 0xb
 1442 004c 3B       		.uleb128 0x3b
 1443 004d 0B       		.uleb128 0xb
 1444 004e 27       		.uleb128 0x27
 1445 004f 0C       		.uleb128 0xc
 1446 0050 49       		.uleb128 0x49
 1447 0051 13       		.uleb128 0x13
 1448 0052 11       		.uleb128 0x11
 1449 0053 01       		.uleb128 0x1
 1450 0054 12       		.uleb128 0x12
 1451 0055 01       		.uleb128 0x1
 1452 0056 40       		.uleb128 0x40
 1453 0057 06       		.uleb128 0x6
 1454 0058 01       		.uleb128 0x1
 1455 0059 13       		.uleb128 0x13
 1456 005a 00       		.byte	0x0
 1457 005b 00       		.byte	0x0
 1458 005c 07       		.uleb128 0x7
 1459 005d 05       		.uleb128 0x5
 1460 005e 00       		.byte	0x0
 1461 005f 03       		.uleb128 0x3
 1462 0060 0E       		.uleb128 0xe
 1463 0061 3A       		.uleb128 0x3a
 1464 0062 0B       		.uleb128 0xb
 1465 0063 3B       		.uleb128 0x3b
 1466 0064 0B       		.uleb128 0xb
 1467 0065 49       		.uleb128 0x49
 1468 0066 13       		.uleb128 0x13
 1469 0067 02       		.uleb128 0x2
 1470 0068 06       		.uleb128 0x6
 1471 0069 00       		.byte	0x0
 1472 006a 00       		.byte	0x0
 1473 006b 08       		.uleb128 0x8
 1474 006c 34       		.uleb128 0x34
 1475 006d 00       		.byte	0x0
 1476 006e 03       		.uleb128 0x3
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 36


 1477 006f 0E       		.uleb128 0xe
 1478 0070 3A       		.uleb128 0x3a
 1479 0071 0B       		.uleb128 0xb
 1480 0072 3B       		.uleb128 0x3b
 1481 0073 0B       		.uleb128 0xb
 1482 0074 49       		.uleb128 0x49
 1483 0075 13       		.uleb128 0x13
 1484 0076 02       		.uleb128 0x2
 1485 0077 06       		.uleb128 0x6
 1486 0078 00       		.byte	0x0
 1487 0079 00       		.byte	0x0
 1488 007a 09       		.uleb128 0x9
 1489 007b 2E       		.uleb128 0x2e
 1490 007c 01       		.byte	0x1
 1491 007d 3F       		.uleb128 0x3f
 1492 007e 0C       		.uleb128 0xc
 1493 007f 03       		.uleb128 0x3
 1494 0080 0E       		.uleb128 0xe
 1495 0081 3A       		.uleb128 0x3a
 1496 0082 0B       		.uleb128 0xb
 1497 0083 3B       		.uleb128 0x3b
 1498 0084 05       		.uleb128 0x5
 1499 0085 27       		.uleb128 0x27
 1500 0086 0C       		.uleb128 0xc
 1501 0087 49       		.uleb128 0x49
 1502 0088 13       		.uleb128 0x13
 1503 0089 11       		.uleb128 0x11
 1504 008a 01       		.uleb128 0x1
 1505 008b 12       		.uleb128 0x12
 1506 008c 01       		.uleb128 0x1
 1507 008d 40       		.uleb128 0x40
 1508 008e 06       		.uleb128 0x6
 1509 008f 01       		.uleb128 0x1
 1510 0090 13       		.uleb128 0x13
 1511 0091 00       		.byte	0x0
 1512 0092 00       		.byte	0x0
 1513 0093 0A       		.uleb128 0xa
 1514 0094 05       		.uleb128 0x5
 1515 0095 00       		.byte	0x0
 1516 0096 03       		.uleb128 0x3
 1517 0097 0E       		.uleb128 0xe
 1518 0098 3A       		.uleb128 0x3a
 1519 0099 0B       		.uleb128 0xb
 1520 009a 3B       		.uleb128 0x3b
 1521 009b 05       		.uleb128 0x5
 1522 009c 49       		.uleb128 0x49
 1523 009d 13       		.uleb128 0x13
 1524 009e 02       		.uleb128 0x2
 1525 009f 06       		.uleb128 0x6
 1526 00a0 00       		.byte	0x0
 1527 00a1 00       		.byte	0x0
 1528 00a2 0B       		.uleb128 0xb
 1529 00a3 05       		.uleb128 0x5
 1530 00a4 00       		.byte	0x0
 1531 00a5 03       		.uleb128 0x3
 1532 00a6 08       		.uleb128 0x8
 1533 00a7 3A       		.uleb128 0x3a
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 37


 1534 00a8 0B       		.uleb128 0xb
 1535 00a9 3B       		.uleb128 0x3b
 1536 00aa 05       		.uleb128 0x5
 1537 00ab 49       		.uleb128 0x49
 1538 00ac 13       		.uleb128 0x13
 1539 00ad 02       		.uleb128 0x2
 1540 00ae 06       		.uleb128 0x6
 1541 00af 00       		.byte	0x0
 1542 00b0 00       		.byte	0x0
 1543 00b1 0C       		.uleb128 0xc
 1544 00b2 34       		.uleb128 0x34
 1545 00b3 00       		.byte	0x0
 1546 00b4 03       		.uleb128 0x3
 1547 00b5 0E       		.uleb128 0xe
 1548 00b6 3A       		.uleb128 0x3a
 1549 00b7 0B       		.uleb128 0xb
 1550 00b8 3B       		.uleb128 0x3b
 1551 00b9 05       		.uleb128 0x5
 1552 00ba 49       		.uleb128 0x49
 1553 00bb 13       		.uleb128 0x13
 1554 00bc 02       		.uleb128 0x2
 1555 00bd 06       		.uleb128 0x6
 1556 00be 00       		.byte	0x0
 1557 00bf 00       		.byte	0x0
 1558 00c0 0D       		.uleb128 0xd
 1559 00c1 34       		.uleb128 0x34
 1560 00c2 00       		.byte	0x0
 1561 00c3 03       		.uleb128 0x3
 1562 00c4 08       		.uleb128 0x8
 1563 00c5 3A       		.uleb128 0x3a
 1564 00c6 0B       		.uleb128 0xb
 1565 00c7 3B       		.uleb128 0x3b
 1566 00c8 05       		.uleb128 0x5
 1567 00c9 49       		.uleb128 0x49
 1568 00ca 13       		.uleb128 0x13
 1569 00cb 02       		.uleb128 0x2
 1570 00cc 06       		.uleb128 0x6
 1571 00cd 00       		.byte	0x0
 1572 00ce 00       		.byte	0x0
 1573 00cf 0E       		.uleb128 0xe
 1574 00d0 0F       		.uleb128 0xf
 1575 00d1 00       		.byte	0x0
 1576 00d2 0B       		.uleb128 0xb
 1577 00d3 0B       		.uleb128 0xb
 1578 00d4 49       		.uleb128 0x49
 1579 00d5 13       		.uleb128 0x13
 1580 00d6 00       		.byte	0x0
 1581 00d7 00       		.byte	0x0
 1582 00d8 0F       		.uleb128 0xf
 1583 00d9 34       		.uleb128 0x34
 1584 00da 00       		.byte	0x0
 1585 00db 03       		.uleb128 0x3
 1586 00dc 0E       		.uleb128 0xe
 1587 00dd 3A       		.uleb128 0x3a
 1588 00de 0B       		.uleb128 0xb
 1589 00df 3B       		.uleb128 0x3b
 1590 00e0 05       		.uleb128 0x5
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 38


 1591 00e1 49       		.uleb128 0x49
 1592 00e2 13       		.uleb128 0x13
 1593 00e3 00       		.byte	0x0
 1594 00e4 00       		.byte	0x0
 1595 00e5 10       		.uleb128 0x10
 1596 00e6 34       		.uleb128 0x34
 1597 00e7 00       		.byte	0x0
 1598 00e8 03       		.uleb128 0x3
 1599 00e9 08       		.uleb128 0x8
 1600 00ea 3A       		.uleb128 0x3a
 1601 00eb 0B       		.uleb128 0xb
 1602 00ec 3B       		.uleb128 0x3b
 1603 00ed 05       		.uleb128 0x5
 1604 00ee 49       		.uleb128 0x49
 1605 00ef 13       		.uleb128 0x13
 1606 00f0 00       		.byte	0x0
 1607 00f1 00       		.byte	0x0
 1608 00f2 11       		.uleb128 0x11
 1609 00f3 2E       		.uleb128 0x2e
 1610 00f4 01       		.byte	0x1
 1611 00f5 3F       		.uleb128 0x3f
 1612 00f6 0C       		.uleb128 0xc
 1613 00f7 03       		.uleb128 0x3
 1614 00f8 0E       		.uleb128 0xe
 1615 00f9 3A       		.uleb128 0x3a
 1616 00fa 0B       		.uleb128 0xb
 1617 00fb 3B       		.uleb128 0x3b
 1618 00fc 0B       		.uleb128 0xb
 1619 00fd 27       		.uleb128 0x27
 1620 00fe 0C       		.uleb128 0xc
 1621 00ff 49       		.uleb128 0x49
 1622 0100 13       		.uleb128 0x13
 1623 0101 11       		.uleb128 0x11
 1624 0102 01       		.uleb128 0x1
 1625 0103 12       		.uleb128 0x12
 1626 0104 01       		.uleb128 0x1
 1627 0105 40       		.uleb128 0x40
 1628 0106 06       		.uleb128 0x6
 1629 0107 00       		.byte	0x0
 1630 0108 00       		.byte	0x0
 1631 0109 00       		.byte	0x0
 1632              		.section	.debug_pubnames,"",%progbits
 1633 0000 60000000 		.4byte	0x60
 1634 0004 0200     		.2byte	0x2
 1635 0006 00000000 		.4byte	.Ldebug_info0
 1636 000a A2020000 		.4byte	0x2a2
 1637 000e 7B000000 		.4byte	0x7b
 1638 0012 65657072 		.ascii	"eepromStartRead\000"
 1638      6F6D5374 
 1638      61727452 
 1638      65616400 
 1639 0022 D5000000 		.4byte	0xd5
 1640 0026 70636139 		.ascii	"pca9532\000"
 1640      35333200 
 1641 002e 68010000 		.4byte	0x168
 1642 0032 65657072 		.ascii	"eepromWrite\000"
 1642      6F6D5772 
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 39


 1642      69746500 
 1643 003e DD010000 		.4byte	0x1dd
 1644 0042 65657072 		.ascii	"eepromPageRead\000"
 1644      6F6D5061 
 1644      67655265 
 1644      616400
 1645 0051 5A020000 		.4byte	0x25a
 1646 0055 65657072 		.ascii	"eepromPoll\000"
 1646      6F6D506F 
 1646      6C6C00
 1647 0060 00000000 		.4byte	0x0
 1648              		.section	.debug_aranges,"",%progbits
 1649 0000 1C000000 		.4byte	0x1c
 1650 0004 0200     		.2byte	0x2
 1651 0006 00000000 		.4byte	.Ldebug_info0
 1652 000a 04       		.byte	0x4
 1653 000b 00       		.byte	0x0
 1654 000c 0000     		.2byte	0x0
 1655 000e 0000     		.2byte	0x0
 1656 0010 00000000 		.4byte	.Ltext0
 1657 0014 B6020000 		.4byte	.Letext0-.Ltext0
 1658 0018 00000000 		.4byte	0x0
 1659 001c 00000000 		.4byte	0x0
 1660              		.section	.debug_str,"MS",%progbits,1
 1661              	.LASF12:
 1662 0000 70636139 		.ascii	"pca9532\000"
 1662      35333200 
 1663              	.LASF3:
 1664 0008 756E7369 		.ascii	"unsigned int\000"
 1664      676E6564 
 1664      20696E74 
 1664      00
 1665              	.LASF16:
 1666 0015 65657072 		.ascii	"eepromWrite\000"
 1666      6F6D5772 
 1666      69746500 
 1667              	.LASF9:
 1668 0021 72657443 		.ascii	"retCode\000"
 1668      6F646500 
 1669              	.LASF24:
 1670 0029 65657072 		.ascii	"eepromPoll\000"
 1670      6F6D506F 
 1670      6C6C00
 1671              	.LASF10:
 1672 0034 73746174 		.ascii	"status\000"
 1672      757300
 1673              	.LASF8:
 1674 003b 61646472 		.ascii	"address\000"
 1674      65737300 
 1675              	.LASF21:
 1676 0043 474E5520 		.ascii	"GNU C 4.2.2\000"
 1676      4320342E 
 1676      322E3200 
 1677              	.LASF7:
 1678 004f 64657641 		.ascii	"devAddr\000"
 1678      64647200 
 1679              	.LASF17:
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 40


 1680 0057 61646472 		.ascii	"addr\000"
 1680      00
 1681              	.LASF13:
 1682 005c 70427566 		.ascii	"pBuf\000"
 1682      00
 1683              	.LASF1:
 1684 0061 756E7369 		.ascii	"unsigned char\000"
 1684      676E6564 
 1684      20636861 
 1684      7200
 1685              	.LASF14:
 1686 006f 70427566 		.ascii	"pBuf2\000"
 1686      3200
 1687              	.LASF11:
 1688 0075 65657072 		.ascii	"eepromStartRead\000"
 1688      6F6D5374 
 1688      61727452 
 1688      65616400 
 1689              	.LASF19:
 1690 0085 65657072 		.ascii	"eepromPageRead\000"
 1690      6F6D5061 
 1690      67655265 
 1690      616400
 1691              	.LASF2:
 1692 0094 73686F72 		.ascii	"short unsigned int\000"
 1692      7420756E 
 1692      7369676E 
 1692      65642069 
 1692      6E7400
 1693              	.LASF4:
 1694 00a7 7369676E 		.ascii	"signed char\000"
 1694      65642063 
 1694      68617200 
 1695              	.LASF23:
 1696 00b3 2F637967 		.ascii	"/cygdrive/c/Users/Anders/Fr\345n Gamla Datorn/Mina "
 1696      64726976 
 1696      652F632F 
 1696      55736572 
 1696      732F416E 
 1697 00e3 646F6B75 		.ascii	"dokument/Embedded Artists/Products/Education boards"
 1697      6D656E74 
 1697      2F456D62 
 1697      65646465 
 1697      64204172 
 1698 0116 2F4C5043 		.ascii	"/LPC2138 EDU/testPrograms/productionTest\000"
 1698      32313338 
 1698      20454455 
 1698      2F746573 
 1698      7450726F 
 1699              	.LASF15:
 1700 013f 6C656E32 		.ascii	"len2\000"
 1700      00
 1701              	.LASF0:
 1702 0144 74553136 		.ascii	"tU16\000"
 1702      00
 1703              	.LASF6:
 1704 0149 74426F6F 		.ascii	"tBool\000"
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 41


 1704      6C00
 1705              	.LASF5:
 1706 014f 73686F72 		.ascii	"short int\000"
 1706      7420696E 
 1706      7400
 1707              	.LASF22:
 1708 0159 65657072 		.ascii	"eeprom.c\000"
 1708      6F6D2E63 
 1708      00
 1709              	.LASF18:
 1710 0162 70446174 		.ascii	"pData\000"
 1710      6100
 1711              	.LASF20:
 1712 0168 6275726E 		.ascii	"burnEnd\000"
 1712      456E6400 
 1713              		.ident	"GCC: (GNU) 4.2.2"
ARM GAS  /cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 eeprom.c
/cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s:1      .text:00000000 $t
/cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s:16     .text:00000000 eepromStartRead
/cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s:151    .text:00000098 pca9532
/cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s:337    .text:00000180 eepromWrite
/cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s:428    .text:000001ec eepromPageRead
/cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s:540    .text:00000264 eepromPoll
/cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s:612    .debug_frame:00000000 $d
/cygdrive/c/Users/Anders/AppData/Local/Temp/ccrUUocg.s:736    .debug_loc:00000000 $d

UNDEFINED SYMBOLS
i2cStart
i2cPutChar
i2cCheckStatus
i2cRepeatStart
i2cWriteWithWait
i2cGetChar
i2cStop
